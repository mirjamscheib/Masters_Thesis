---
title: "Clean_Data"
format: html
---

# Libraries 
```{r}
#clear R environment 
rm(list = ls())

# Load the required packages
pkgCheck <- function(x){ 
  if (!require(x,character.only = TRUE)){
    install.packages(x,dependencies=TRUE)
    if(!require(x,character.only = TRUE)) {
      stop()
    }
  }
}

pkgCheck("dplyr")
pkgCheck("readr")
pkgCheck("tidyr")
pkgCheck("tidyverse")
pkgCheck("stringr")
pkgCheck("writexl")
```

# Load Data
```{r}
# abiotic data
abiotic <- read_delim("abiotic_mi_sampling/Abiotic_2022_2023_FINAL.csv")

# coordinate data from every location 
# Glenner 
gl1 <- read_delim("abiotic_mi_sampling/GPS_Points/GL1.csv", col_names = FALSE)
gl2 <- read_delim("abiotic_mi_sampling/GPS_Points/GL2.csv", col_names = FALSE)
gl3 <- read_delim("abiotic_mi_sampling/GPS_Points/GL3.csv", col_names = FALSE)
gl4 <- read_delim("abiotic_mi_sampling/GPS_Points/GL4.csv", col_names = FALSE)
gl5 <- read_delim("abiotic_mi_sampling/GPS_Points/GL5.csv", col_names = FALSE)
gl6 <- read_delim("abiotic_mi_sampling/GPS_Points/GL6.csv", col_names = FALSE)

# Landquart
l1 <- read_delim("abiotic_mi_sampling/GPS_Points/L1.csv", col_names = FALSE)
l2 <- read_delim("abiotic_mi_sampling/GPS_Points/L2.csv", col_names = FALSE)
l3 <- read_delim("abiotic_mi_sampling/GPS_Points/L3.csv", col_names = FALSE)
l4 <- read_delim("abiotic_mi_sampling/GPS_Points/L4.csv", col_names = FALSE)
lr <- read_delim("abiotic_mi_sampling/GPS_Points/LR.csv", col_names = FALSE)

# Moesa 
m1 <- read_delim("abiotic_mi_sampling/GPS_Points/M1.csv", col_names = FALSE)
m2 <- read_delim("abiotic_mi_sampling/GPS_Points/M2.csv", col_names = FALSE)
m3 <- read_delim("abiotic_mi_sampling/GPS_Points/M3.csv", col_names = FALSE)
m4 <- read_delim("abiotic_mi_sampling/GPS_Points/M4.csv", col_names = FALSE)
m5 <- read_delim("abiotic_mi_sampling/GPS_Points/M5.csv", col_names = FALSE)
m6 <- read_delim("abiotic_mi_sampling/GPS_Points/M6.csv", col_names = FALSE)
m7 <- read_delim("abiotic_mi_sampling/GPS_Points/M7.csv", col_names = FALSE)
mr <- read_delim("abiotic_mi_sampling/GPS_Points/MR.csv", col_names = FALSE)

# Plessur
p1 <- read_delim("abiotic_mi_sampling/GPS_Points/P1.csv", col_names = FALSE)
p2 <- read_delim("abiotic_mi_sampling/GPS_Points/P2.csv", col_names = FALSE)
p3 <- read_delim("abiotic_mi_sampling/GPS_Points/P3.csv", col_names = FALSE)
pr <- read_delim("abiotic_mi_sampling/GPS_Points/PR.csv", col_names = FALSE)

# Sitter
s1 <- read_delim("abiotic_mi_sampling/GPS_Points/S1.csv", col_names = FALSE)
s2 <- read_delim("abiotic_mi_sampling/GPS_Points/S2.csv", col_names = FALSE)
s3 <- read_delim("abiotic_mi_sampling/GPS_Points/S3.csv", col_names = FALSE)
s4 <- read_delim("abiotic_mi_sampling/GPS_Points/S4.csv", col_names = FALSE)
s5 <- read_delim("abiotic_mi_sampling/GPS_Points/S5.csv", col_names = FALSE)
s6 <- read_delim("abiotic_mi_sampling/GPS_Points/S6.csv", col_names = FALSE)

# Saane 
sa1 <- read_delim("abiotic_mi_sampling/GPS_Points/SA1.csv", col_names = FALSE)
sa2 <- read_delim("abiotic_mi_sampling/GPS_Points/SA2.csv", col_names = FALSE)
sa3 <- read_delim("abiotic_mi_sampling/GPS_Points/SA3.csv", col_names = FALSE)
sa4 <- read_delim("abiotic_mi_sampling/GPS_Points/SA4.csv", col_names = FALSE)
sa5 <- read_delim("abiotic_mi_sampling/GPS_Points/SA5.csv", col_names = FALSE)
sa6 <- read_delim("abiotic_mi_sampling/GPS_Points/SA6.csv", col_names = FALSE)
sa7 <- read_delim("abiotic_mi_sampling/GPS_Points/SA7.csv", col_names = FALSE)
sar <- read_delim("abiotic_mi_sampling/GPS_Points/SAR.csv", col_names = FALSE)

# Sense/Singine 
se1 <- read_delim("abiotic_mi_sampling/GPS_Points/SE1.csv", col_names = FALSE)
se2 <- read_delim("abiotic_mi_sampling/GPS_Points/SE2-new.csv", col_names = FALSE)
se3 <- read_delim("abiotic_mi_sampling/GPS_Points/SE3-NEW.csv", col_names = FALSE)
se4 <- read_delim("abiotic_mi_sampling/GPS_Points/SE4.csv", col_names = FALSE)
sr <- read_delim("abiotic_mi_sampling/GPS_Points/SR.csv", col_names = FALSE)

# Ticino 
t1 <- read_delim("abiotic_mi_sampling/GPS_Points/T1.csv", col_names = FALSE)
t2 <- read_delim("abiotic_mi_sampling/GPS_Points/T2.csv", col_names = FALSE)
t3 <- read_delim("abiotic_mi_sampling/GPS_Points/T3.csv", col_names = FALSE)

# Thur 
th1 <- read_delim("abiotic_mi_sampling/GPS_Points/th1.csv", col_names = FALSE)
th2 <- read_delim("abiotic_mi_sampling/GPS_Points/th2.csv", col_names = FALSE)
th3 <- read_delim("abiotic_mi_sampling/GPS_Points/TH3-NEW.csv", col_names = FALSE)
th4 <- read_delim("abiotic_mi_sampling/GPS_Points/TH4-NEW.csv", col_names = FALSE)
th5 <- read_delim("abiotic_mi_sampling/GPS_Points/th5.csv", col_names = FALSE)

# Verzasca
ve2 <- read_delim("abiotic_mi_sampling/GPS_Points/VE2.csv", col_names = FALSE)
ve3 <- read_delim("abiotic_mi_sampling/GPS_Points/VE3.csv", col_names = FALSE)
ve4 <- read_delim("abiotic_mi_sampling/GPS_Points/VE4b.csv", col_names = FALSE)

# Vorderrhein 
vr1 <- read_delim("abiotic_mi_sampling/GPS_Points/VR1.csv", col_names = FALSE)
vr2 <- read_delim("abiotic_mi_sampling/GPS_Points/VR2.csv", col_names = FALSE)
vr3 <- read_delim("abiotic_mi_sampling/GPS_Points/VR3.csv", col_names = FALSE)
vr4 <- read_delim("abiotic_mi_sampling/GPS_Points/VR4.csv", col_names = FALSE)
vr5 <- read_delim("abiotic_mi_sampling/GPS_Points/VR5.csv", col_names = FALSE)
vr6 <- read_delim("abiotic_mi_sampling/GPS_Points/VR6.csv", col_names = FALSE)
```

# Create Join Key
## ! Abiotic Data
### Abiotic1
```{r}
# cut abiotic data into two datasets - the two different tables which are in the original excel file 
abiotic1 <- abiotic[ ,c(1:23)]

# label header into R friendly characters &
colnames(abiotic1) <- c("River", "Hydropeaking_river_type", "Hydrokeaking_residual_flow_natural_near_natural", "Reach_Untersuchungsstelle", "Abiotic_measured_by", "Date_of_survey", "Transect", "Sampling_point", "Time_of_survey", "DIstance_Wasseranschlaglinie_m", "Flow_velocity_v60_cm/s", "Category_Flow_velocity_5_Bewohnbarkeits-klasse", "Water_depth_cm", "Category_Water_depth", "Clogging_6_Klassen", "Clogging_3_Klassen", "Substrate_type", "Algae_cover_Bewuchsdichte_5_Kategorien_1-5", "Moos_cover_Deckungsgrad_6_Kategorien_0-5", "CPOM_cover_Deckungsgrad_5_Kategorien_1-5", "RTK-GPS_Nr", "MZB_kick-net_taken_by", "Varia")

# create join key with "river-transect-sampling_point"
abiotic1 <- abiotic1 |>
  mutate(join_key = paste(Reach_Untersuchungsstelle, Transect, Sampling_point, sep = "-")) 

# remove NA-NA-NA rows 
abiotic1 <- abiotic1 |>
  subset(join_key != "NA-NA-NA")
```

### ! Abiotic2
```{r}
# cut abiotic data into two datasets - the two different tables which are in the original excel file 
abiotic2 <- abiotic[c(1:177) ,c(25:39)]

# label header into R friendly characters 
colnames(abiotic2) <- c("River", "Reach_Untersuchungsstelle", "Abiotic_measured_by", "Date_of_survey", "Time_of_survey", "pH", "Conductivity_ys_s", "Oxygen_content_mg_l", "Oxygen_saturation_%", "Turbidity_FNU", "Temperature_C", "Discharge_m3_s", "Water_gauge_MueM", "Gauging_station", "Varia")

# group and sum variables, which can be grouped  
abiotic2_sum <- abiotic2 |>
  group_by(River, Reach_Untersuchungsstelle, Abiotic_measured_by, Date_of_survey, Gauging_station) |>
  summarise() |>
  na.omit()

# Reshaping the data into three columns
num_rows <- length(abiotic2$Time_of_survey) / 3 

# Extracting every third value
time <- data.frame(
  Time_of_survey_before = abiotic2$Time_of_survey[seq(1, length(abiotic2$Time_of_survey), by = 3)],
  Time_of_survey_during = abiotic2$Time_of_survey[seq(2, length(abiotic2$Time_of_survey), by = 3)],
  Time_of_survey_after = abiotic2$Time_of_survey[seq(3, length(abiotic2$Time_of_survey), by = 3)]
)
time <- na.omit(time)

pH <- as.data.frame(matrix(unlist(abiotic2$pH, use.names=FALSE),ncol=3, byrow=TRUE))
colnames(pH) <- c("pH_before", "pH_during", "pH_after")
pH <- na.omit(pH)

conductivity <- as.data.frame(matrix(unlist(abiotic2$Conductivity_ys_s, use.names=FALSE),ncol=3, byrow=TRUE))
colnames(conductivity) <- c("Conductivity_ys_s_before", "Conductivity_ys_s_during", "Conductivity_ys_s_after")
conductivity <- na.omit(conductivity)

oxy_content <- as.data.frame(matrix(unlist(abiotic2$Oxygen_content_mg_l, use.names=FALSE),ncol=3, byrow=TRUE))
colnames(oxy_content) <- c("Oxygen_content_mg_l_before", "Oxygen_content_mg_l_during", "Oxygen_content_mg_l_after")
oxy_content <- na.omit(oxy_content)

oxy_sat <- as.data.frame(matrix(unlist(abiotic2$`Oxygen_saturation_%`, use.names=FALSE),ncol=3, byrow=TRUE))
colnames(oxy_sat) <- c("Oxygen_saturation_%_before", "Oxygen_saturation_%_during", "Oxygen_saturation_%_after")
oxy_sat <- oxy_sat[c(1:59), ]

turbidity <- as.data.frame(matrix(unlist(abiotic2$Turbidity_FNU, use.names=FALSE),ncol=3, byrow=TRUE))
colnames(turbidity) <- c("Turbidity_FNU_before", "Turbidity_FNU_during", "Turbidity_FNU_after")
turbidity <- na.omit(turbidity)

temp <- as.data.frame(matrix(unlist(abiotic2$Temperature_C, use.names=FALSE),ncol=3, byrow=TRUE))
colnames(temp) <- c("Temperature_C_before", "Temperature_C_during", "Temperature_C_after")
temp <- na.omit(temp)

discharge <- as.data.frame(matrix(unlist(abiotic2$Discharge_m3_s, use.names=FALSE),ncol=3, byrow=TRUE))
colnames(discharge) <- c("Discharge_m3_s_before", "Discharge_m3_s_during", "Discharge_m3_s_after")
discharge <- na.omit(discharge)

water_gauge <- as.data.frame(matrix(unlist(abiotic2$Water_gauge_MueM, use.names=FALSE),ncol=3, byrow=TRUE))
colnames(water_gauge) <- c("Water_gauge_MueM_before", "Water_gauge_MueM_during", "Water_gauge_MueM_after")
water_gauge <- na.omit(water_gauge)

varia <- as.data.frame(matrix(unlist(abiotic2$Varia, use.names=FALSE),ncol=3, byrow=TRUE))
colnames(varia) <- c("Varia_before", "Varia_during", "Varia_after")
varia <- varia[c(1:59), ]

# bind dataframes together to one dataframe  
abiotic2 <- cbind(abiotic2_sum, time, pH, conductivity, oxy_content, oxy_sat, turbidity, temp, discharge, water_gauge, varia)


# bind abiotic1 with abiotic2 together
abiotic <- abiotic1 |>
  full_join(abiotic2, by = "Reach_Untersuchungsstelle")
```


## MI Data
### Field Data
```{r}
# Load MI data field 
field <- read_delim("abiotic_mi_sampling/MZB_Feldscreening.csv", col_names = FALSE)

# extract first row to repeat always 3 times 
field_row1 <- field[1, ]

# remove NA values 
field_without_NA <- field_row1[!is.na(field_row1)]

# repeat characters 3 times 
rep_field_row1 <- rep(field_without_NA, each = 3)

# fill blank spaces with "_" to make is R reader friendly 
row_filled <- gsub(" ", "_", rep_field_row1)

# extract second row to combine with first row
field_row2 <- field[2, -c(1:8)]

# combine the first two rows 
combined_vec <- paste(row_filled, field_row2, sep = "_")

# remove the first row and first 8 columns to attach vector to count, projecton factor etc. 
field_attach <- field[-c(1:2), -c(1:8)]

# attach created row 
field_attach <- rbind(combined_vec, field_attach)

# add the first 8 columns to the dataframe 
field_col <- field[-1 ,c(1:8)]

field1 <- cbind(field_col, field_attach)

# tell R, that the first row are the column names 
colnames(field1) <- as.character(field1[1, ])
field1 <- field1[-1, ]

# create join_key - "river-transect-sampling_point"
field1 <- field1 |>
  mutate(join_key = paste(Sampling_site, Transect, Flow_range_location, sep = "-"))
```


### Lab Data
```{r}
# MI data lab 
lab <- read_delim("abiotic_mi_sampling/MZB_SBI_Labor.csv", col_names = FALSE)

# remove rows and columns that aren't needed 
lab <- lab[-c(1:2), -3]

# remove the first two rows to fill in the MZB columns and combine them 
lab_mzb <- lab[-c(1:2), ]

# fill in the first column 
lab_mzb <- lab_mzb |>
  fill(X1) |>
  mutate(X1 = paste(X1, X2, sep = "_"),
         X1 = gsub(" ", "_", X1),
         X1 = gsub("_NA", "", X1)) |>
  select(-X2) 

# transpose dataframe with MZB 
lab_mzb <- as.data.frame(t(lab_mzb))

# tell R, that the first row are the column names 
colnames(lab_mzb) <- as.character(lab_mzb[1, ])
lab_mzb <- lab_mzb[-1, ]

# combine MZB dataframe with first two columns 
lab_transects <- as.data.frame(t(lab[c(1:2),-1]))

# tell R, that the first row are the column names 
colnames(lab_transects) <- as.character(lab_transects[1, ])
lab_transects <- lab_transects[-1, ]

# fill sampling sites and remove T from trasect-kick
lab_transects <- lab_transects |>
  fill(Sampling_site)|> 
  rename(Transect_Kick = "Transekt - Kick") |>
  mutate(Transect_Kick = gsub("T", "", Transect_Kick),
         join_key = paste(Sampling_site, Transect_Kick, sep = "-"))

# combine transect and mzb data
lab_all <- cbind(lab_transects, lab_mzb)

# write csv to correct not unique headers 
write.csv(lab_all, "abiotic_mi_sampling/Lab_intermediate.csv")

# load csv data 
lab_file <- read_delim("abiotic_mi_sampling/Lab_intermediate.csv")

# remove double names 
lab_file <- lab_file |>
  select(- ...1, -BRYOZOA...8, -`"NEMATHELMINTHES"...14`, -Hirudinea...16, -Hirudinea...21, -Oligochaeta...23, -Bivalvia...43, -Transect_Kick)
```

## Coordinate Data 
```{r}
# coordinates: create the same join key "river-transect-sampling_point"
# function for column without characters in first column
join_key <- function(data, section){
data |>
  mutate(river = section,
         transect = head(rep(1:nrow(data), each = 3), nrow(data)),
         sampling_point = rep(c(3, 2, 1), length.out = nrow(data)),
         join_key = paste(river, transect, sampling_point, sep = "-")) 
}


# create join key for coordinates
# Glenner 
gl1 <- join_key(gl1, "GL1")
gl2 <- join_key(gl2, "GL2")
gl3 <- join_key(gl3, "GL3")
gl4 <- join_key(gl4, "GL4")
gl5 <- join_key(gl5, "GL5")
gl6 <- join_key(gl6, "GL6")

# Landquart
l1 <- join_key(l1, "L1")
l2 <- join_key(l2, "L2")
l3 <- join_key(l3, "L3")
l4 <- join_key(l4, "L4")
lr <- join_key(lr, "LR")

# Moesa 
m1 <- join_key(m1, "M1")
m2 <- join_key(m2, "M2")
m3 <- join_key(m3, "M3")
m4 <- join_key(m4, "M4")
m5 <- join_key(m5, "M5")
m6 <- join_key(m6, "M6")
m7 <- join_key(m7, "M7")
mr <- join_key(mr, "MR")

# Plessur 
p1 <- join_key(p1, "P1")
p2 <- join_key(p2, "P2")
p3 <- join_key(p3, "P3")
pr <- join_key(pr, "PR")

# Sitter
s1 <- join_key(s1, "S1")
s2 <- join_key(s2, "S2")
s3 <- join_key(s3, "S3")
s4 <- join_key(s4, "S4")
s5 <- join_key(s5, "S5")
s6 <- join_key(s6, "S6")

# Saane 
sa1 <- join_key(sa1, "SA1")
sa2 <- join_key(sa2, "SA2")
sa3 <- join_key(sa3, "SA3")
sa4 <- join_key(sa4, "SA4")
sa5 <- join_key(sa5, "SA5")
sa6 <- join_key(sa6, "SA6")
sa7 <- join_key(sa7, "SA7")
sar <- join_key(sar, "SAR")

# Sense/Singine 
se1 <- join_key(se1, "SE1")
se2 <- join_key(se2, "SE2")
se3 <- join_key(se3, "SE3")
se4 <- join_key(se4, "SE4")
sr <- join_key(sr, "SR")

# Ticino 
t1 <- join_key(t1, "T1")
t2 <- join_key(t2, "T2")
t3 <- join_key(t3, "T3")

# Thur 
th1 <- join_key(th1, "TH1")
th2 <- join_key(th2, "TH2")
th3 <- join_key(th3, "TH3")
th4 <- join_key(th4, "TH4")
th5 <- join_key(th5, "TH5")

# Verzasca
ve2 <- join_key(ve2, "VE2")
ve3 <- join_key(ve3, "VE3")
ve4 <- join_key(ve4, "VE4")

# Vorderrhein
vr1 <- join_key(vr1, "VR1")
vr2 <- join_key(vr2, "VR2")
vr3 <- join_key(vr3, "VR3")
vr4 <- join_key(vr4, "VR4") 
vr5 <- join_key(vr5, "VR5")
vr6 <- join_key(vr6, "VR6")
```

# Bind Coordinate DFs together
gl6, l1, l2, l3, l4, lr, m1, m2, m3, m4, m5, m6, m7, mr, p1, p2, p3, pr, s1, s2, s3, s4, s5, s6, sa1, sa2, sa3, sa4, sa5, sa6, sa7, sar, se1, se2, se3, se4, sr, t1, t2, t3, th1, th2, th3, th4, th5, ve2, ve3, ve4, vr1, vr2, vr3, vr4, vr5, vr6
```{r}
# bind all coordinate dfs together  
coordinates <- rbind(gl1, gl2, gl3, gl4, gl5)

# discard columns which are not needed & rename columns 
coordinates <- coordinates |>
  select(-X1, -X2, -river, -transect, -sampling_point) |>
  rename(x = X3, y = X4, z = X5)
```

# Join Dataframes 
## All + MZB Field 
```{r}
# join dataframes together  
abiotic_field <- abiotic |>
  full_join(coordinates, by = "join_key") |>
  full_join(field1, by = "join_key") 

# remove unnessecary columns
abiotic_field <- abiotic_field |>
  select(-River.y, -Transect.y, -Flow_range_location, -Date_of_survey.y)

# write excel with field MZB results 
write_xlsx(abiotic_field,"abiotic_mi_sampling\\Abiotic_MI_Field.xlsx")
```
  
## All + MZB Lab 
```{r}
# join dataframes together 
abiotic_lab <- abiotic |>
  full_join(coordinates, by = "join_key") |>
  full_join(lab_file, by = "join_key")

# remove unnessecary columns
abiotic_lab <- abiotic_lab |>
  select(-River.y, -Date_of_survey.y)
 
# write excel with Lab results 
write_xlsx(abiotic_lab,"abiotic_mi_sampling\\Abiotic_MI_Lab.xlsx")  
```

## All + MZB Lab with only Lab results 
```{r}
# anordnung noch ändern und column names geben 
abiotic_lab_model <- abiotic |>
  full_join(coordinates, by = "join_key") |>
  right_join(lab_file, by = "join_key")

abiotic_lab_model <- abiotic_lab_model |>
  select(-River.y, -Date_of_survey.y)
 
# write excel with Lab results 
write_xlsx(abiotic_lab_model,"abiotic_mi_sampling\\Abiotic_MI_Lab_Model.xlsx")  
```











