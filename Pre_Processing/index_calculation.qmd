---
title: "Index_Calculation"
format: html
---

# Libraries 
```{r}
#clear R environment 
rm(list = ls())

# Load the required packages
pkgCheck <- function(x){ 
  if (!require(x,character.only = TRUE)){
    install.packages(x,dependencies=TRUE)
    if(!require(x,character.only = TRUE)) {
      stop()
    }
  }
}

pkgCheck("dplyr")
pkgCheck("readr")
pkgCheck("tidyr")
pkgCheck("tidyverse")
pkgCheck("stringr")
pkgCheck("writexl")
pkgCheck("gbm")
pkgCheck("dismo")
pkgCheck("raster")

# set working directory 
#setwd("Pre_Processing")
```

# Load Data
```{r}
lab <- read_delim("abiotic_mi_sampling/Abiotic_MI_Lab_Model.csv")
```

# Prepare Data 
```{r}
# remove all response variables
lab_exp <- lab[ , c(1:60)]

lab <- lab[ ,-c(1:60)]

lab <- as.data.frame(lapply(lab, as.numeric))
```

# Calculate EPT Taxa 
```{r}
# Plecoptera, Trichoptera, Ephemeroptera
# Define the letter combination to search for
combination_Plecoptera <- "Plecoptera"
combination_Trichoptera <- "Trichoptera"
combination_Ephemeroptera <- "Ephemeroptera"

# Identify the column names containing the letter combination
matching_Plecoptera <- grep(combination_Plecoptera, names(lab), value = TRUE)
matching_Trichoptera <- grep(combination_Trichoptera, names(lab), value = TRUE)
matching_Ephemeroptera <- grep(combination_Ephemeroptera, names(lab), value = TRUE)


# Iterate through each row and count the cells meeting the conditions
lab$Count_Plecoptera <- apply(lab, 1, function(row) {
  sum(!is.na(row[matching_Plecoptera]) & row[matching_Plecoptera] > 0)
})

lab$Count_Trichoptera <- apply(lab, 1, function(row) {
  sum(!is.na(row[matching_Trichoptera]) & row[matching_Trichoptera] > 0)
})

lab$Count_Ephemeroptera <- apply(lab, 1, function(row) {
  sum(!is.na(row[matching_Ephemeroptera]) & row[matching_Ephemeroptera] > 0)
})

# Calculate EPT Taxa per Sampling_location 
EPT_Taxa <- lab$Count_Plecoptera + lab$Count_Trichoptera + lab$Count_Ephemeroptera

# Display the resulting dataframe
print(EPT_Taxa) # - OK?
```

# Shannon (H) Index & Abundance
```{r}
# Create a sample dataframe
lab_Shannon <- lab[ , -c(193:197)]

# Convert all columns to numeric format
lab_Shannon <- data.frame(sapply(lab_Shannon, as.numeric))

# Calculate the total number of observations at each sampling site
# df$total_count <- rowSums(df[, -1])
abundance <- rowSums(lab_Shannon, na.rm = TRUE) # = Abundance


# Calculate the proportion of each species within each sampling site
# proportions <- df[, -c(1, ncol(df))] / df$total_count
 proportions <- lab_Shannon[, -c(1, ncol(lab_Shannon))] / abundance

# Calculate the Shannon index for each sampling site
# shannon <- -rowSums(proportions * log2(proportions), na.rm = TRUE)
shannon <- -rowSums(proportions * log2(proportions), na.rm = TRUE)

# Compute the average Shannon index across all sampling sites
average_shannon <- mean(shannon, na.rm = TRUE)

# Display the results
print(shannon)
print(average_shannon)
```

# Number of Taxa 
```{r}
# Iterate through each row and count the cells meeting the conditions
Number_Taxa <- apply(lab_Shannon, 1, function(row) {
  sum(!is.na(row) & row > 0)
})
```


# Combine all Results in one DF
```{r}
# combine all results + response variables 
lab_new <- cbind(lab_exp, shannon, Number_Taxa, abundance, EPT_Taxa)
```

# K-Index (Theodoropoulos et al., 2018)
```{r}
# calculate k_index and create two dataframes for ML modelling (one with velocity, one with water depth and velocity as environmental explanatory variable)
# only velocity
lab_ml_model_v <- lab_new |>
  mutate(k_index = 0.4*(Number_Taxa/max(Number_Taxa, na.rm = TRUE))
         + 0.3*(shannon/max(shannon, na.rm = TRUE))
         + 0.2*(EPT_Taxa/max(EPT_Taxa, na.rm = TRUE))
         + 0.1*(abundance/max(abundance, na.rm = TRUE))) |>
  dplyr::select(Reach_Untersuchungsstelle, `Flow_velocity_v60_cm/s`, x, y, shannon, abundance, k_index) |>
  rename(velocity = `Flow_velocity_v60_cm/s`) |>
  mutate(x = as.numeric(x),
         y = as.numeric(y))

# water depth + velocity
lab_ml_model_wd_v <- lab_new |>
  mutate(k_index = 0.4*(Number_Taxa/max(Number_Taxa, na.rm = TRUE))
         + 0.3*(shannon/max(shannon, na.rm = TRUE))
         + 0.2*(EPT_Taxa/max(EPT_Taxa, na.rm = TRUE))
         + 0.1*(abundance/max(abundance, na.rm = TRUE))) |>
  dplyr::select(Reach_Untersuchungsstelle, `Flow_velocity_v60_cm/s`, Water_depth_cm, x, y, shannon, abundance, k_index) |>
  rename(velocity = `Flow_velocity_v60_cm/s`,
         wd_cm = Water_depth_cm) |>
  mutate(x = as.numeric(x),
         y = as.numeric(y))


# write results into new .csv file 
write_xlsx(lab_ml_model_v,"abiotic_mi_sampling\\lab_ml_v.xlsx") 
write_xlsx(lab_ml_model_wd_v,"abiotic_mi_sampling\\lab_ml_wd_v.xlsx") 
```


# Univariate HM DF
```{r}
# combine all abiotic data with abundance & Shannon Diversity 
lab_univariate <- lab_ml_model_wd_v |>
  dplyr::select(Reach_Untersuchungsstelle, velocity, wd_cm, x, y, shannon, abundance, k_index) |>
  mutate(x = as.numeric(x),
         y = as.numeric(y))

# write results into new .csv file 
write_xlsx(lab_univariate,"abiotic_mi_sampling\\lab_univariate.xlsx") 
```


