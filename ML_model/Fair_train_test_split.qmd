---
title: "Fair_train_test_split"
format: html
---

# Libraries
```{r}
library(readr)
library(geoR)
library(plotly)
library(ggplot2)
library(dplyr)
```


# Set parameters
```{r}
SET <- 1
N_REALIZATIONS <- 5
XDIR <- 'x'
YDIR <- 'y'
```


# Read the data
```{r}
training <- read_csv(file.path(getwd(), "Files", "Datasets", paste0("demo", SET, "_train.csv")), col_types = cols(X = col_double(), Y = col_double()))
training <- training %>% mutate(UWI = row_number())

real_world <- read_csv(file.path(getwd(), "Files", "Datasets", paste0("demo", SET, "_rw.csv")), col_types = cols(X = col_double(), Y = col_double()))
real_world <- real_world %>% mutate(UWI = row_number())
```


# Geostatistical setup and definitions
```{r}
vario <- variog(cbind(training$X, training$Y), training$Perm, uvec=seq(0, 1000, 10), max.dist=100)
```


# Define the modeling dictionary
```{r}
dictionary_model <- list(
  "anis" = vario$hmin / vario$hmaj,
  "cc" = vario$gamma[1],
  "aa" = vario$hmaj,
  "nug" = vario$gamma[2]
)
```


# Instantiate the object
```{r}
fair_cv <- sfs$SpatialFairSplit(training, real_world, dictionary_model, xdir=XDIR, ydir=YDIR, test_size=0.05)
```



# Obtain realizations of training and test sets from spatial fair split
```{r}
sfs_realizations <- fair_cv$fair_sets_realizations(N_REALIZATIONS)
sfs_train <- sfs_realizations$training_sets
sfs_test <- sfs_realizations$test_sets
sfs_kvar <- sfs_realizations$kriging_variance
```


# For comparison purposes, compute other sets with different cross-validation methods
```{r}
vsa_realizations <- fair_cv$create_other_sets(N_REALIZATIONS)
vsa_train <- vsa_realizations$vsa_train
vsa_test <- vsa_realizations$vsa_test
vsa_kvar <- vsa_realizations$vsa_kriging_variance
spatial_cv <- vsa_realizations$spatial_cv
spatial_cv_kvar <- vsa_realizations$spatial_cv_kriging_variance
```


# Estimate the kriging variance
```{r}
vmap <- krige(cbind(training$X, training$Y), training$Perm, cbind(seq(0, 1000, 10), seq(0, 1000, 10)), model = vario)

cell_size <- 10
xrange <- seq(0, 1000, by = cell_size)
yrange <- seq(0, 1000, by = cell_size)
```


# Plot the 2D dataset and the kriging variance
```{r}
figure <- sfs$spatial_config_and_kvar(training, real_world, vmap$krige_output$predict, xrange, yrange)
```


# Plot the spatial configuration of the three cross-validation methods
```{r}
sfs$plot_3_realizations(
  fair_train = sfs_train,
  fair_test = sfs_test,
  rand_train = vsa_train,
  rand_test = vsa_test,
  spatial_cv = spatial_cv,
  real_world_set = real_world,
  realiz = 1
)
```


# Instantiate the object to obtain the KDE and violin plots
```{r}
images <- sfs$PublicationImages(
  test_kvar_random = vsa_kvar,
  test_kvar_fair = sfs_kvar,
  test_kvar_spatial = spatial_cv_kvar,
  rw_kvar = fair_cv$rw_krig_var
)
```


# Plot the kernel density estimates of the three cross-validation methods
```{r}
plot <- images$kde_plots(5.0)
```


# Plot the violin plots of the divergence metrics
```{r}
plot2 <- images$divergence_violins()
```


