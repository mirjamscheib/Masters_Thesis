---
title: "Untitled"
format: html
---

# Read results - OK
```{r}
#read results --------
#path to results file
h5_2  <- h5file("Data/hydrodynamic_model_results/results_2.4.h5")

```

# access sub-directories - OK 
```{r}
#to access the different sub-directories ("groups") use "[[]]"
results_2 <- h5_2[["RESULTS"]][["CellsAll"]]
```

# extract velocity & waterdepth - OK
```{r}
# Results Q2.4
bottomElevation_2 <- h5_2[["CellsAll"]][["BottomEl"]][,]
waterSurfElev_2 <- results_2[["HydState"]][["0000003"]][1,]
qX_2 <- results_2[["HydState"]][["0000003"]][2,]
qY_2 <- results_2[["HydState"]][["0000003"]][3,]
depth_2 <- waterSurfElev_2 - bottomElevation_2
vX_2 <- qX_2/depth_2
vY_2 <- qY_2/depth_2
V_abs_2 <- (vX_2^2+vY_2^2)^.5
```

# Read mesh and create shp
```{r}
#mesh paths
Twodm_path <- "Data/hydrodynamic_model_results/Landquart_comp.2dm"

#read mesh as a table
Twodm <- read.table(Twodm_path, sep="", skip=2, header=F, fill=T)

#split mesh in nodes and elements
#nodes
nd_df <- Twodm[which(Twodm$V1=="ND"),-1]
colnames(nd_df) <- c( "ID", "X", "Y", "Z")
nd_df$X <- as.numeric(nd_df$X)
nd_df$Y <- as.numeric(nd_df$Y)

#elements
e3t_df <- Twodm[which(Twodm$V1=="E3T"),][,-1]
colnames(e3t_df) <- c( "ID", "N1", "N2", "N3")


#create table with coordinates of each triangular element (x1,y1,x2,y2,x3,y3)
triangles <- (cbind(nd_df[e3t_df$N1, c("X","Y")], nd_df[e3t_df$N2, c("X","Y")], nd_df[e3t_df$N3, c("X","Y")], nd_df[e3t_df$N1, c("X","Y")]))

tr_matrix <- matrix(unlist(triangles), ncol=8, byrow = F)

#number of elements
ID <- e3t_df$ID
length(ID) # 38694 triangular cells in the computational mesh

# Create SP object
polys <- SpatialPolygons(mapply(function(poly, id) {
  xy <- matrix(poly, ncol=2, byrow=TRUE)
  Polygons(list(Polygon(xy)), ID=id)
}, split(tr_matrix, row(tr_matrix)), ID))


# Create SPDF (exportable as shapefile)
mesh.sp <- SpatialPolygonsDataFrame(polys, data.frame(id=ID, row.names=ID))

#link results with mesh 
## Q2.4
mesh.sp$waterSurfElev_2 <- as.numeric(round(waterSurfElev_2,3))
mesh.sp$depth_2 <- as.numeric(round(depth_2,3))
mesh.sp$V_abs_2 <- as.numeric(round(V_abs_2,3))
mesh.sp$substrate_all <- as.numeric(7)


#write new shapefile
# overwrite = TRUE
shape <- shapefile(mesh.sp, "Data/raster_files/L2_test1.shp", overwrite = TRUE)
```

# Create raster 
```{r}
# Read the shapefile
shapefile <- shapefile("raster_files/Landquart_results.shp")

# Set the raster extent using the bounding box of the shapefile
raster_extent <- extent(shapefile)

# Set the raster resolution in meters
raster_resolution <- 0.5

# Create an empty raster layer with the specified extent and resolution
raster_layer <- raster(ext = extent(shapefile), res = raster_resolution)

# Rasterize the shapefile into the empty raster layer
##### Only for water depth #####
## Q2.4
raster_depth_2 <- rasterize(shapefile, raster_layer, shapefile$depth_2)

## Q3.9
raster_depth_3 <- rasterize(shapefile, raster_layer, shapefile$depth_3)

## Q4.6
raster_depth_4 <- rasterize(shapefile, raster_layer, shapefile$depth_4)

## Q7
raster_depth_7 <- rasterize(shapefile, raster_layer, shapefile$depth_7)

## Q9.24
raster_depth_9 <- rasterize(shapefile, raster_layer, shapefile$depth_9)

## Q11.4
raster_depth_11 <- rasterize(shapefile, raster_layer, shapefile$depth_11)

## Q13.3
raster_depth_13 <- rasterize(shapefile, raster_layer, shapefile$depth_13)

## Q15
raster_depth_15 <- rasterize(shapefile, raster_layer, shapefile$depth_15)

## Q18
raster_depth_18 <- rasterize(shapefile, raster_layer, shapefile$depth_18)

## Q22
raster_depth_22 <- rasterize(shapefile, raster_layer, shapefile$depth_22)

## Q25
raster_depth_25 <- rasterize(shapefile, raster_layer, shapefile$depth_25)

## Q28
raster_depth_28 <- rasterize(shapefile, raster_layer, shapefile$depth_28)

## Q32.69
raster_depth_32 <- rasterize(shapefile, raster_layer, shapefile$depth_32)

##### Only for velocity #####
## Q2.4
raster_velocity_2 <- rasterize(shapefile, raster_layer, shapefile$V_abs_2)

## Q3.9
raster_velocity_3 <- rasterize(shapefile, raster_layer, shapefile$V_abs_3)

## Q4.6
raster_velocity_4 <- rasterize(shapefile, raster_layer, shapefile$V_abs_4)

## Q7
raster_velocity_7 <- rasterize(shapefile, raster_layer, shapefile$V_abs_7)

## Q9
raster_velocity_9 <- rasterize(shapefile, raster_layer, shapefile$V_abs_9)

## Q11.4
raster_velocity_11 <- rasterize(shapefile, raster_layer, shapefile$V_abs_11)

## Q13.3
raster_velocity_13 <- rasterize(shapefile, raster_layer, shapefile$V_abs_13)

## Q15
raster_velocity_15 <- rasterize(shapefile, raster_layer, shapefile$V_abs_15)

## Q18.9
raster_velocity_18 <- rasterize(shapefile, raster_layer, shapefile$V_abs_18)

## Q22
raster_velocity_22 <- rasterize(shapefile, raster_layer, shapefile$V_abs_22)

## Q25
raster_velocity_25 <- rasterize(shapefile, raster_layer, shapefile$V_abs_25)

## Q28
raster_velocity_28 <- rasterize(shapefile, raster_layer, shapefile$V_abs_28)

## Q32.69
raster_velocity_32 <- rasterize(shapefile, raster_layer, shapefile$V_abs_32)

##### Only for substrate #####
raster_substrate <- rasterize(shapefile, raster_layer, shapefile$substrate0)

# Save the raster layer as a GeoTIFF file
# water depth
writeRaster(raster_depth_2, "raster_files/Landquart_results_depth_2.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_depth_3, "raster_files/Landquart_results_depth_3.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_depth_4, "raster_files/Landquart_results_depth_4.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_depth_7, "raster_files/Landquart_results_depth_7.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_depth_9, "raster_files/Landquart_results_depth_9.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_depth_11, "raster_files/Landquart_results_depth_11.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_depth_13, "raster_files/Landquart_results_depth_13.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_depth_15, "raster_files/Landquart_results_depth_15.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_depth_18, "raster_files/Landquart_results_depth_18.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_depth_22, "raster_files/Landquart_results_depth_22.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_depth_25, "raster_files/Landquart_results_depth_25.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_depth_28, "raster_files/Landquart_results_depth_28.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_depth_32, "raster_files/Landquart_results_depth_32.tif", format = "GTiff", overwrite = TRUE)

# velocity
writeRaster(raster_velocity_2, "raster_files/Landquart_results_velocity_2.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_velocity_3, "raster_files/Landquart_results_velocity_3.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_velocity_4, "raster_files/Landquart_results_velocity_4.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_velocity_7, "raster_files/Landquart_results_velocity_7.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_velocity_9, "raster_files/Landquart_results_velocity_9.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_velocity_11, "raster_files/Landquart_results_velocity_11.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_velocity_13, "raster_files/Landquart_results_velocity_13.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_velocity_15, "raster_files/Landquart_results_velocity_15.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_velocity_18, "raster_files/Landquart_results_velocity_18.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_velocity_22, "raster_files/Landquart_results_velocity_22.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_velocity_25, "raster_files/Landquart_results_velocity_25.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_velocity_28, "raster_files/Landquart_results_velocity_28.tif", format = "GTiff", overwrite = TRUE)
writeRaster(raster_velocity_32, "raster_files/Landquart_results_velocity_32.tif", format = "GTiff", overwrite = TRUE)

# substrate
writeRaster(raster_substrate, "raster_files/Landquart_results_substrate.tif", format = "GTiff", overwrite = TRUE)
```


