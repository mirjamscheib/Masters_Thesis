---
title: "hdm_mi_analysis"
format: html
---

# Libraries 
```{r}
#clear R environment
rm(list = ls())

# check for a package, install and load 
pkgCheck <- function(x){ 
  if (!require(x,character.only = TRUE)){
    install.packages(x,dependencies=TRUE)
    if(!require(x,character.only = TRUE)) {
      stop()
    }
  }
}

pkgCheck("sf")
pkgCheck("terra")
pkgCheck("dplyr")
pkgCheck("readr")
pkgCheck("sp")
pkgCheck("raster")
pkgCheck("Metrics")
pkgCheck("tidyr")
pkgCheck("ggplot2")
pkgCheck("hydroGOF") # for NSE calculation with NSE() function 
pkgCheck("RColorBrewer")
```

# Evaluation HDM Results
## Load rasters
```{r}
# read rasters containing wd and velocity 
GL1_ezg <- stack("Pre_Processing/rasters_stacked/GL1_2_56_ezg_add.grd")
GL2_ezg <- stack("Pre_Processing/rasters_stacked/GL2_2_37_ezg_add.grd")
L2_ezg <- stack("Pre_Processing/rasters_stacked/L2_9_54_ezg_add.grd")
M1_ezg <- stack("Pre_Processing/rasters_stacked/M1_1_50_ezg_add.grd")
S1_ezg <- stack("Pre_Processing/rasters_stacked/S1_1_94_ezg_add.grd")
S2_ezg <- stack("Pre_Processing/rasters_stacked/S2_1_93_ezg_add.grd")
TH4_ezg <- stack("Pre_Processing/rasters_stacked/TH4_35_12_ezg_add.grd")
VR3_ezg <- stack("Pre_Processing/rasters_stacked/VR3_21_51_ezg_add.grd")

# rename raster 
names(GL1_ezg) <- c("velocity", "wd_cm", "froude", "shear_stress", "stream_power")  
names(GL2_ezg) <- c("velocity", "wd_cm", "froude", "shear_stress", "stream_power")  
names(L2_ezg) <- c("velocity", "wd_cm", "froude", "shear_stress", "stream_power")  
names(M1_ezg) <- c("velocity", "wd_cm", "froude", "shear_stress", "stream_power")  
names(S1_ezg) <- c("velocity", "wd_cm", "froude", "shear_stress", "stream_power")  
names(S2_ezg) <- c("velocity", "wd_cm", "froude", "shear_stress", "stream_power")  
names(TH4_ezg) <- c("velocity", "wd_cm", "froude", "shear_stress", "stream_power")  
names(VR3_ezg) <- c("velocity", "wd_cm", "froude", "shear_stress", "stream_power")
```

## Load data 
```{r}
# load data 
data <- read_delim("Pre_Processing/abiotic_mi_sampling/lab_ml_wd_add.csv") |>
  dplyr::rename(Reach_Untersuchungsstelle = reach)

# prep extraction data 
## GL1
coord_GL1 <- data |>
  subset(Reach_Untersuchungsstelle == "GL1") |>
  dplyr::select(x, y) 

GL1 <- data |>
  subset(Reach_Untersuchungsstelle == "GL1") |>
  dplyr::select(-shannon, -abundance, -k_index, -rel_abundance)

## GL2
coord_GL2 <- data |>
  subset(Reach_Untersuchungsstelle == "GL2") |>
  dplyr::select(x, y) 

GL2 <- data |>
  subset(Reach_Untersuchungsstelle == "GL2") |>
  dplyr::select(-shannon, -abundance, -k_index, -rel_abundance)

## L2
coord_L2 <- data |>
  subset(Reach_Untersuchungsstelle == "L2") |>
  dplyr::select(x, y) 

L2 <- data |>
  subset(Reach_Untersuchungsstelle == "L2") |>
  dplyr::select(-shannon, -abundance, -k_index, -rel_abundance)

## M1
coord_M1 <- data |>
  subset(Reach_Untersuchungsstelle == "M1") |>
  dplyr::select(x, y) 

M1 <- data |>
  subset(Reach_Untersuchungsstelle == "M1") |>
  dplyr::select(-shannon, -abundance, -k_index, -rel_abundance)

## S1
coord_S1 <- data |>
  subset(Reach_Untersuchungsstelle == "S1") |>
  dplyr::select(x, y) 

S1 <- data |>
  subset(Reach_Untersuchungsstelle == "S1") |>
  dplyr::select(-shannon, -abundance, -k_index, -rel_abundance)

## S2
coord_S2 <- data |>
  subset(Reach_Untersuchungsstelle == "S2") |>
  dplyr::select(x, y) 

S2 <- data |>
  subset(Reach_Untersuchungsstelle == "S2") |>
  dplyr::select(-shannon, -abundance, -k_index, -rel_abundance)

## TH4
coord_TH4 <- data |>
  subset(Reach_Untersuchungsstelle == "TH4") |>
  dplyr::select(x, y) 

TH4 <- data |>
  subset(Reach_Untersuchungsstelle == "TH4") |>
  dplyr::select(-shannon, -abundance, -k_index, -rel_abundance)

## VR3
coord_VR3 <- data |>
  subset(Reach_Untersuchungsstelle == "VR3") |>
  dplyr::select(x, y) 

VR3 <- data |>
  subset(Reach_Untersuchungsstelle == "VR3") |>
  dplyr::select(-shannon, -abundance, -k_index, -rel_abundance)
```

## Extract information 
```{r}
# extract raster information for regression analysis
### GL1 ###
regr_GL1 <- raster::extract(GL1_ezg, coord_GL1) |>
  as.data.frame() |>
  dplyr::rename(v_raster = velocity,
         wd_m_raster = wd_cm,
         froude_raster = froude,
         shear_raster = shear_stress,
         stream_raster = stream_power) |>
  cbind(GL1)

### GL2 ###
regr_GL2 <- raster::extract(GL2_ezg, coord_GL2) |>
  as.data.frame() |>
  dplyr::rename(v_raster = velocity,
         wd_m_raster = wd_cm,
         froude_raster = froude,
         shear_raster = shear_stress,
         stream_raster = stream_power) |>
  cbind(GL2) 

### L2 ### 
regr_L2 <- raster::extract(L2_ezg, coord_L2) |>
  as.data.frame() |>
  dplyr::rename(v_raster = velocity,
         wd_m_raster = wd_cm,
         froude_raster = froude,
         shear_raster = shear_stress,
         stream_raster = stream_power) |>
  cbind(L2) 

### M1 ###
regr_M1 <- raster::extract(M1_ezg, coord_M1) |>
  as.data.frame() |>
  dplyr::rename(v_raster = velocity,
         wd_m_raster = wd_cm,
         froude_raster = froude,
         shear_raster = shear_stress,
         stream_raster = stream_power) |>
  cbind(M1)

### S1 ###
regr_S1 <- raster::extract(S1_ezg, coord_S1) |>
  as.data.frame() |>
  dplyr::rename(v_raster = velocity,
         wd_m_raster = wd_cm,
         froude_raster = froude,
         shear_raster = shear_stress,
         stream_raster = stream_power) |>
  cbind(S1) 

### S2 ###
regr_S2 <- raster::extract(S2_ezg, coord_S2) |>
  as.data.frame() |>
  dplyr::rename(v_raster = velocity,
         wd_m_raster = wd_cm,
         froude_raster = froude,
         shear_raster = shear_stress,
         stream_raster = stream_power) |>
  cbind(S2)

### TH4 ###
regr_TH4 <- raster::extract(TH4_ezg, coord_TH4) |>
  as.data.frame() |>
  dplyr::rename(v_raster = velocity,
         wd_m_raster = wd_cm,
         froude_raster = froude,
         shear_raster = shear_stress,
         stream_raster = stream_power) |>
  cbind(TH4) 

### VR3 ###
regr_VR3 <- raster::extract(VR3_ezg, coord_VR3) |>
  as.data.frame() |>
  dplyr::rename(v_raster = velocity,
         wd_m_raster = wd_cm,
         froude_raster = froude,
         shear_raster = shear_stress,
         stream_raster = stream_power) |>
  cbind(VR3)

### Combine into one dataframe ### 
regr_hdm <- rbind(regr_GL1, regr_GL2, regr_L2, regr_M1, regr_S1, regr_S2, regr_TH4, regr_VR3)

### Write .csv file ### 
write.csv(regr_hdm, "Stat_Analysis/stat_analysis_data/regr_analysis_hdm.csv", row.names = FALSE)
```

# Metrics
```{r}
# load data 
data_hdm <- read_delim("Stat_Analysis/stat_analysis_data/regr_analysis_hdm.csv") |>
  na.omit()

# prep extraction data 
## GL1
GL1 <- data_hdm |>
  subset(Reach_Untersuchungsstelle == "GL1") 

## GL2
GL2 <- data_hdm |>
  subset(Reach_Untersuchungsstelle == "GL2") 

## L2
L2 <- data_hdm |>
  subset(Reach_Untersuchungsstelle == "L2") 

## M1
M1 <- data_hdm |>
  subset(Reach_Untersuchungsstelle == "M1") 

## S1
S1 <- data_hdm |>
  subset(Reach_Untersuchungsstelle == "S1") 

## S2
S2 <- data_hdm |>
  subset(Reach_Untersuchungsstelle == "S2") 

## TH4
TH4 <- data_hdm |>
  subset(Reach_Untersuchungsstelle == "TH4") 

## VR3
VR3 <- data_hdm |>
  subset(Reach_Untersuchungsstelle == "VR3") 
```

### RMSE
```{r}
## GL1 
rmse_v_GL1 <- Metrics::rmse(actual = GL1$velocity, predicted = GL1$v_raster)
rmse_wd_GL1 <- Metrics::rmse(actual = GL1$wd_m, predicted = GL1$wd_m_raster)
rmse_f_GL1 <- Metrics::rmse(actual = GL1$froude, predicted = GL1$froude_raster)
rmse_s_GL1 <- Metrics::rmse(actual = GL1$shear_stress, predicted = GL1$shear_raster)
rmse_sp_GL1 <- Metrics::rmse(actual = GL1$stream_power, predicted = GL1$stream_raster)

## GL2 
rmse_v_GL2 <- Metrics::rmse(actual = GL2$velocity, predicted = GL2$v_raster)
rmse_wd_GL2 <- Metrics::rmse(actual = GL2$wd_m, predicted = GL2$wd_m_raster)
rmse_f_GL2 <- Metrics::rmse(actual = GL2$froude, predicted = GL2$froude_raster)
rmse_s_GL2 <- Metrics::rmse(actual = GL2$shear_stress, predicted = GL2$shear_raster)
rmse_sp_GL2 <- Metrics::rmse(actual = GL2$stream_power, predicted = GL2$stream_raster)

## L2 
rmse_v_L2 <- Metrics::rmse(actual = L2$velocity, predicted = L2$v_raster)
rmse_wd_L2 <- Metrics::rmse(actual = L2$wd_m, predicted = L2$wd_m_raster)
rmse_f_L2 <- Metrics::rmse(actual = L2$froude, predicted = L2$froude_raster)
rmse_s_L2 <- Metrics::rmse(actual = L2$shear_stress, predicted = L2$shear_raster)
rmse_sp_L2 <- Metrics::rmse(actual = L2$stream_power, predicted = L2$stream_raster)

## M1 
rmse_v_M1 <- Metrics::rmse(actual = M1$velocity, predicted = M1$v_raster)
rmse_wd_M1 <- Metrics::rmse(actual = M1$wd_m, predicted = M1$wd_m_raster)
rmse_f_M1 <- Metrics::rmse(actual = M1$froude, predicted = M1$froude_raster)
rmse_s_M1 <- Metrics::rmse(actual = M1$shear_stress, predicted = M1$shear_raster)
rmse_sp_M1 <- Metrics::rmse(actual = M1$stream_power, predicted = M1$stream_raster)

## S1
rmse_v_S1 <- Metrics::rmse(actual = S1$velocity, predicted = S1$v_raster)
rmse_wd_S1 <- Metrics::rmse(actual = S1$wd_m, predicted = S1$wd_m_raster)
rmse_f_S1 <- Metrics::rmse(actual = S1$froude, predicted = S1$froude_raster)
rmse_s_S1 <- Metrics::rmse(actual = S1$shear_stress, predicted = S1$shear_raster)
rmse_sp_S1 <- Metrics::rmse(actual = S1$stream_power, predicted = S1$stream_raster)

## S2
rmse_v_S2 <- Metrics::rmse(actual = S2$velocity, predicted = S2$v_raster)
rmse_wd_S2 <- Metrics::rmse(actual = S2$wd_m, predicted = S2$wd_m_raster)
rmse_f_S2 <- Metrics::rmse(actual = S2$froude, predicted = S2$froude_raster)
rmse_s_S2 <- Metrics::rmse(actual = S2$shear_stress, predicted = S2$shear_raster)
rmse_sp_S2 <- Metrics::rmse(actual = S2$stream_power, predicted = S2$stream_raster)

## TH4
rmse_v_TH4 <- Metrics::rmse(actual = TH4$velocity, predicted = TH4$v_raster)
rmse_wd_TH4 <- Metrics::rmse(actual = TH4$wd_m, predicted = TH4$wd_m_raster)
rmse_f_TH4 <- Metrics::rmse(actual = TH4$froude, predicted = TH4$froude_raster)
rmse_s_TH4 <- Metrics::rmse(actual = TH4$shear_stress, predicted = TH4$shear_raster)
rmse_sp_TH4 <- Metrics::rmse(actual = TH4$stream_power, predicted = TH4$stream_raster)

## VR3
rmse_v_VR3 <- Metrics::rmse(actual = VR3$velocity, predicted = VR3$v_raster)
rmse_wd_VR3 <- Metrics::rmse(actual = VR3$wd_m, predicted = VR3$wd_m_raster)
rmse_f_VR3 <- Metrics::rmse(actual = VR3$froude, predicted = VR3$froude_raster)
rmse_s_VR3 <- Metrics::rmse(actual = VR3$shear_stress, predicted = VR3$shear_raster)
rmse_sp_VR3 <- Metrics::rmse(actual = VR3$stream_power, predicted = VR3$stream_raster)

## ALL
rmse_v <- Metrics::rmse(actual = data_hdm$velocity, predicted = data_hdm$v_raster)
rmse_wd <- Metrics::rmse(actual = data_hdm$wd_m, predicted = data_hdm$wd_m_raster)
rmse_f <- Metrics::rmse(actual = data_hdm$froude, predicted = data_hdm$froude_raster)
rmse_s <- Metrics::rmse(actual = data_hdm$shear_stress, predicted = data_hdm$shear_raster)
rmse_sp <- Metrics::rmse(actual = data_hdm$stream_power, predicted = data_hdm$stream_raster)
```

### MAE
```{r}
## GL1 
mae_v_GL1 <- Metrics::mae(actual = GL1$velocity, predicted = GL1$v_raster)
mae_wd_GL1 <- Metrics::mae(actual = GL1$wd_m, predicted = GL1$wd_m_raster)
mae_f_GL1 <- Metrics::mae(actual = GL1$froude, predicted = GL1$froude_raster)
mae_s_GL1 <- Metrics::mae(actual = GL1$shear_stress, predicted = GL1$shear_raster)
mae_sp_GL1 <- Metrics::mae(actual = GL1$stream_power, predicted = GL1$stream_raster)

## GL2 
mae_v_GL2 <- Metrics::mae(actual = GL2$velocity, predicted = GL2$v_raster)
mae_wd_GL2 <- Metrics::mae(actual = GL2$wd_m, predicted = GL2$wd_m_raster)
mae_f_GL2 <- Metrics::mae(actual = GL2$froude, predicted = GL2$froude_raster)
mae_s_GL2 <- Metrics::mae(actual = GL2$shear_stress, predicted = GL2$shear_raster)
mae_sp_GL2 <- Metrics::mae(actual = GL2$stream_power, predicted = GL2$stream_raster)

## L2 
mae_v_L2 <- Metrics::mae(actual = L2$velocity, predicted = L2$v_raster)
mae_wd_L2 <- Metrics::mae(actual = L2$wd_m, predicted = L2$wd_m_raster)
mae_f_L2 <- Metrics::mae(actual = L2$froude, predicted = L2$froude_raster)
mae_s_L2 <- Metrics::mae(actual = L2$shear_stress, predicted = L2$shear_raster)
mae_sp_L2 <- Metrics::mae(actual = L2$stream_power, predicted = L2$stream_raster)

## M1 
mae_v_M1 <- Metrics::mae(actual = M1$velocity, predicted = M1$v_raster)
mae_wd_M1 <- Metrics::mae(actual = M1$wd_m, predicted = M1$wd_m_raster)
mae_f_M1 <- Metrics::mae(actual = M1$froude, predicted = M1$froude_raster)
mae_s_M1 <- Metrics::mae(actual = M1$shear_stress, predicted = M1$shear_raster)
mae_sp_M1 <- Metrics::mae(actual = M1$stream_power, predicted = M1$stream_raster)

## S1
mae_v_S1 <- Metrics::mae(actual = S1$velocity, predicted = S1$v_raster)
mae_wd_S1 <- Metrics::mae(actual = S1$wd_m, predicted = S1$wd_m_raster)
mae_f_S1 <- Metrics::mae(actual = S1$froude, predicted = S1$froude_raster)
mae_s_S1 <- Metrics::mae(actual = S1$shear_stress, predicted = S1$shear_raster)
mae_sp_S1 <- Metrics::mae(actual = S1$stream_power, predicted = S1$stream_raster)

## S2
mae_v_S2 <- Metrics::mae(actual = S2$velocity, predicted = S2$v_raster)
mae_wd_S2 <- Metrics::mae(actual = S2$wd_m, predicted = S2$wd_m_raster)
mae_f_S2 <- Metrics::mae(actual = S2$froude, predicted = S2$froude_raster)
mae_s_S2 <- Metrics::mae(actual = S2$shear_stress, predicted = S2$shear_raster)
mae_sp_S2 <- Metrics::mae(actual = S2$stream_power, predicted = S2$stream_raster)

## TH4
mae_v_TH4 <- Metrics::mae(actual = TH4$velocity, predicted = TH4$v_raster)
mae_wd_TH4 <- Metrics::mae(actual = TH4$wd_m, predicted = TH4$wd_m_raster)
mae_f_TH4 <- Metrics::mae(actual = TH4$froude, predicted = TH4$froude_raster)
mae_s_TH4 <- Metrics::mae(actual = TH4$shear_stress, predicted = TH4$shear_raster)
mae_sp_TH4 <- Metrics::mae(actual = TH4$stream_power, predicted = TH4$stream_raster)

## VR3
mae_v_VR3 <- Metrics::mae(actual = VR3$velocity, predicted = VR3$v_raster)
mae_wd_VR3 <- Metrics::mae(actual = VR3$wd_m, predicted = VR3$wd_m_raster)
mae_f_VR3 <- Metrics::mae(actual = VR3$froude, predicted = VR3$froude_raster)
mae_s_VR3 <- Metrics::mae(actual = VR3$shear_stress, predicted = VR3$shear_raster)
mae_sp_VR3 <- Metrics::mae(actual = VR3$stream_power, predicted = VR3$stream_raster)

## ALL
mae_v <- Metrics::mae(actual = data_hdm$velocity, predicted = data_hdm$v_raster)
mae_wd <- Metrics::mae(actual = data_hdm$wd_m, predicted = data_hdm$wd_m_raster)
mae_f <- Metrics::mae(actual = data_hdm$froude, predicted = data_hdm$froude_raster)
mae_s <- Metrics::mae(actual = data_hdm$shear_stress, predicted = data_hdm$shear_raster)
mae_sp <- Metrics::mae(actual = data_hdm$stream_power, predicted = data_hdm$stream_raster)
```

## NSE 
```{r}
## GL1 
nse_v_GL1 <- NSE(sim = GL1$v_raster, obs = GL1$velocity)
nse_wd_GL1 <- NSE(sim = GL1$wd_m_raster, obs = GL1$wd_m)
nse_f_GL1 <- NSE(sim = GL1$froude_raster, obs = GL1$froude)
nse_s_GL1 <- NSE(obs = GL1$shear_stress, sim = GL1$shear_raster)
nse_sp_GL1 <- NSE(obs = GL1$stream_power, sim = GL1$stream_raster)

## GL2 
nse_v_GL2 <- NSE(obs = GL2$velocity, sim = GL2$v_raster)
nse_wd_GL2 <- NSE(obs = GL2$wd_m, sim = GL2$wd_m_raster)
nse_f_GL2 <- NSE(obs = GL2$froude, sim = GL2$froude_raster)
nse_s_GL2 <- NSE(obs = GL2$shear_stress, sim = GL2$shear_raster)
nse_sp_GL2 <- NSE(obs = GL2$stream_power, sim = GL2$stream_raster)

## L2 
nse_v_L2 <- NSE(obs = L2$velocity, sim = L2$v_raster)
nse_wd_L2 <- NSE(obs = L2$wd_m, sim = L2$wd_m_raster)
nse_f_L2 <- NSE(obs = L2$froude, sim = L2$froude_raster)
nse_s_L2 <- NSE(obs = L2$shear_stress, sim = L2$shear_raster)
nse_sp_L2 <- NSE(obs = L2$stream_power, sim = L2$stream_raster)

## M1 
nse_v_M1 <- NSE(obs = M1$velocity, sim = M1$v_raster)
nse_wd_M1 <- NSE(obs = M1$wd_m, sim = M1$wd_m_raster)
nse_f_M1 <- NSE(obs = M1$froude, sim = M1$froude_raster)
nse_s_M1 <- NSE(obs = M1$shear_stress, sim = M1$shear_raster)
nse_sp_M1 <- NSE(obs = M1$stream_power, sim = M1$stream_raster)

## S1
nse_v_S1 <- NSE(obs = S1$velocity, sim = S1$v_raster)
nse_wd_S1 <- NSE(obs = S1$wd_m, sim = S1$wd_m_raster)
nse_f_S1 <- NSE(obs = S1$froude, sim = S1$froude_raster)
nse_s_S1 <- NSE(obs = S1$shear_stress, sim = S1$shear_raster)
nse_sp_S1 <- NSE(obs = S1$stream_power, sim = S1$stream_raster)

## S2
nse_v_S2 <- NSE(obs = S2$velocity, sim = S2$v_raster)
nse_wd_S2 <- NSE(obs = S2$wd_m, sim = S2$wd_m_raster)
nse_f_S2 <- NSE(obs = S2$froude, sim = S2$froude_raster)
nse_s_S2 <- NSE(obs = S2$shear_stress, sim = S2$shear_raster)
nse_sp_S2 <- NSE(obs = S2$stream_power, sim = S2$stream_raster)

## TH4
nse_v_TH4 <- NSE(obs = TH4$velocity, sim = TH4$v_raster)
nse_wd_TH4 <- NSE(obs = TH4$wd_m, sim = TH4$wd_m_raster)
nse_f_TH4 <- NSE(obs = TH4$froude, sim = TH4$froude_raster)
nse_s_TH4 <- NSE(obs = TH4$shear_stress, sim = TH4$shear_raster)
nse_sp_TH4 <- NSE(obs = TH4$stream_power, sim = TH4$stream_raster)

## VR3
nse_v_VR3 <- NSE(obs = VR3$velocity, sim = VR3$v_raster)
nse_wd_VR3 <- NSE(obs = VR3$wd_m, sim = VR3$wd_m_raster)
nse_f_VR3 <- NSE(obs = VR3$froude, sim = VR3$froude_raster)
nse_s_VR3 <- NSE(obs = VR3$shear_stress, sim = VR3$shear_raster)
nse_sp_VR3 <- NSE(obs = VR3$stream_power, sim = VR3$stream_raster)

## ALL
nse_v <- NSE(obs = data_hdm$velocity, sim = data_hdm$v_raster)
nse_wd <- NSE(obs = data_hdm$wd_m, sim = data_hdm$wd_m_raster)
nse_f <- NSE(obs = data_hdm$froude, sim = data_hdm$froude_raster)
nse_s <- NSE(obs = data_hdm$shear_stress, sim = data_hdm$shear_raster)
nse_sp <- NSE(obs = data_hdm$stream_power, sim = data_hdm$stream_raster)
```

## Mean, SD, Min, Max
```{r}
### GL1 ### ----------------------------------------------------------------
### MEAN ###
GL1_mean_v <- mean(GL1$velocity)
GL1_mean_wd <- mean(GL1$wd_m)
GL1_mean_f <- mean(GL1$froude)
GL1_mean_s <- mean(GL1$shear_stress)
GL1_mean_sp <- mean(GL1$stream_power)

GL1_mean_v_r <- mean(GL1$v_raster)
GL1_mean_wd_r <- mean(GL1$wd_m_raster)
GL1_mean_f_r <- mean(GL1$froude_raster)
GL1_mean_s_r <- mean(GL1$shear_raster)
GL1_mean_sp_r <- mean(GL1$stream_raster)

### SD ### 
GL1_sd_v <- sd(GL1$velocity)
GL1_sd_wd <- sd(GL1$wd_m)
GL1_sd_f <- sd(GL1$froude)
GL1_sd_s <- sd(GL1$shear_stress)
GL1_sd_sp <- sd(GL1$stream_power)

GL1_sd_v_r <- sd(GL1$v_raster)
GL1_sd_wd_r <- sd(GL1$wd_m_raster)
GL1_sd_f_r <- sd(GL1$froude_raster)
GL1_sd_s_r <- sd(GL1$shear_raster)
GL1_sd_sp_r <- sd(GL1$stream_raster)

### MIN ### 
GL1_min_v <- min(GL1$velocity)
GL1_min_wd <- min(GL1$wd_m)
GL1_min_f <- min(GL1$froude)
GL1_min_s <- min(GL1$shear_stress)
GL1_min_sp <- min(GL1$stream_power)

GL1_min_v_r <- min(GL1$v_raster)
GL1_min_wd_r <- min(GL1$wd_m_raster)
GL1_min_f_r <- min(GL1$froude_raster)
GL1_min_s_r <- min(GL1$shear_raster)
GL1_min_sp_r <- min(GL1$stream_raster)

### MAX ### 
GL1_max_v <- max(GL1$velocity)
GL1_max_wd <- max(GL1$wd_m)
GL1_max_f <- max(GL1$froude)
GL1_max_s <- max(GL1$shear_stress)
GL1_max_sp <- max(GL1$stream_power)

GL1_max_v_r <- max(GL1$v_raster)
GL1_max_wd_r <- max(GL1$wd_m_raster)
GL1_max_f_r <- max(GL1$froude_raster)
GL1_max_s_r <- max(GL1$shear_raster)
GL1_max_sp_r <- max(GL1$stream_raster)

### GL2 ### ----------------------------------------------------------------
### MEAN ###
GL2_mean_v <- mean(GL2$velocity)
GL2_mean_wd <- mean(GL2$wd_m)
GL2_mean_f <- mean(GL2$froude)
GL2_mean_s <- mean(GL2$shear_stress)
GL2_mean_sp <- mean(GL2$stream_power)

GL2_mean_v_r <- mean(GL2$v_raster)
GL2_mean_wd_r <- mean(GL2$wd_m_raster)
GL2_mean_f_r <- mean(GL2$froude_raster)
GL2_mean_s_r <- mean(GL2$shear_raster)
GL2_mean_sp_r <- mean(GL2$stream_raster)

### SD ### 
GL2_sd_v <- sd(GL2$velocity)
GL2_sd_wd <- sd(GL2$wd_m)
GL2_sd_f <- sd(GL2$froude)
GL2_sd_s <- sd(GL2$shear_stress)
GL2_sd_sp <- sd(GL2$stream_power)

GL2_sd_v_r <- sd(GL2$v_raster)
GL2_sd_wd_r <- sd(GL2$wd_m_raster)
GL2_sd_f_r <- sd(GL2$froude_raster)
GL2_sd_s_r <- sd(GL2$shear_raster)
GL2_sd_sp_r <- sd(GL2$stream_raster)

### MIN ### 
GL2_min_v <- min(GL2$velocity)
GL2_min_wd <- min(GL2$wd_m)
GL2_min_f <- min(GL2$froude)
GL2_min_s <- min(GL2$shear_stress)
GL2_min_sp <- min(GL2$stream_power)

GL2_min_v_r <- min(GL2$v_raster)
GL2_min_wd_r <- min(GL2$wd_m_raster)
GL2_min_f_r <- min(GL2$froude_raster)
GL2_min_s_r <- min(GL2$shear_raster)
GL2_min_sp_r <- min(GL2$stream_raster)

### MAX ### 
GL2_max_v <- max(GL2$velocity)
GL2_max_wd <- max(GL2$wd_m)
GL2_max_f <- max(GL2$froude)
GL2_max_s <- max(GL2$shear_stress)
GL2_max_sp <- max(GL2$stream_power)

GL2_max_v_r <- max(GL2$v_raster)
GL2_max_wd_r <- max(GL2$wd_m_raster)
GL2_max_f_r <- max(GL2$froude_raster)
GL2_max_s_r <- max(GL2$shear_raster)
GL2_max_sp_r <- max(GL2$stream_raster)

### L2 ### ----------------------------------------------------------------
### MEAN ###
L2_mean_v <- mean(L2$velocity)
L2_mean_wd <- mean(L2$wd_m)
L2_mean_f <- mean(L2$froude)
L2_mean_s <- mean(L2$shear_stress)
L2_mean_sp <- mean(L2$stream_power)

L2_mean_v_r <- mean(L2$v_raster)
L2_mean_wd_r <- mean(L2$wd_m_raster)
L2_mean_f_r <- mean(L2$froude_raster)
L2_mean_s_r <- mean(L2$shear_raster)
L2_mean_sp_r <- mean(L2$stream_raster)

### SD ### 
L2_sd_v <- sd(L2$velocity)
L2_sd_wd <- sd(L2$wd_m)
L2_sd_f <- sd(L2$froude)
L2_sd_s <- sd(L2$shear_stress)
L2_sd_sp <- sd(L2$stream_power)

L2_sd_v_r <- sd(L2$v_raster)
L2_sd_wd_r <- sd(L2$wd_m_raster)
L2_sd_f_r <- sd(L2$froude_raster)
L2_sd_s_r <- sd(L2$shear_raster)
L2_sd_sp_r <- sd(L2$stream_raster)

### MIN ### 
L2_min_v <- min(L2$velocity)
L2_min_wd <- min(L2$wd_m)
L2_min_f <- min(L2$froude)
L2_min_s <- min(L2$shear_stress)
L2_min_sp <- min(L2$stream_power)

L2_min_v_r <- min(L2$v_raster)
L2_min_wd_r <- min(L2$wd_m_raster)
L2_min_f_r <- min(L2$froude_raster)
L2_min_s_r <- min(L2$shear_raster)
L2_min_sp_r <- min(L2$stream_raster)

### MAX ### 
L2_max_v <- max(L2$velocity)
L2_max_wd <- max(L2$wd_m)
L2_max_f <- max(L2$froude)
L2_max_s <- max(L2$shear_stress)
L2_max_sp <- max(L2$stream_power)

L2_max_v_r <- max(L2$v_raster)
L2_max_wd_r <- max(L2$wd_m_raster)
L2_max_f_r <- max(L2$froude_raster)
L2_max_s_r <- max(L2$shear_raster)
L2_max_sp_r <- max(L2$stream_raster)

### M1 ### ----------------------------------------------------------------
### MEAN ###
M1_mean_v <- mean(M1$velocity)
M1_mean_wd <- mean(M1$wd_m)
M1_mean_f <- mean(M1$froude)
M1_mean_s <- mean(M1$shear_stress)
M1_mean_sp <- mean(M1$stream_power)

M1_mean_v_r <- mean(M1$v_raster)
M1_mean_wd_r <- mean(M1$wd_m_raster)
M1_mean_f_r <- mean(M1$froude_raster)
M1_mean_s_r <- mean(M1$shear_raster)
M1_mean_sp_r <- mean(M1$stream_raster)

### SD ### 
M1_sd_v <- sd(M1$velocity)
M1_sd_wd <- sd(M1$wd_m)
M1_sd_f <- sd(M1$froude)
M1_sd_s <- sd(M1$shear_stress)
M1_sd_sp <- sd(M1$stream_power)

M1_sd_v_r <- sd(M1$v_raster)
M1_sd_wd_r <- sd(M1$wd_m_raster)
M1_sd_f_r <- sd(M1$froude_raster)
M1_sd_s_r <- sd(M1$shear_raster)
M1_sd_sp_r <- sd(M1$stream_raster)

### MIN ### 
M1_min_v <- min(M1$velocity)
M1_min_wd <- min(M1$wd_m)
M1_min_f <- min(M1$froude)
M1_min_s <- min(M1$shear_stress)
M1_min_sp <- min(M1$stream_power)

M1_min_v_r <- min(M1$v_raster)
M1_min_wd_r <- min(M1$wd_m_raster)
M1_min_f_r <- min(M1$froude_raster)
M1_min_s_r <- min(M1$shear_raster)
M1_min_sp_r <- min(M1$stream_raster)

### MAX ### 
M1_max_v <- max(M1$velocity)
M1_max_wd <- max(M1$wd_m)
M1_max_f <- max(M1$froude)
M1_max_s <- max(M1$shear_stress)
M1_max_sp <- max(M1$stream_power)

M1_max_v_r <- max(M1$v_raster)
M1_max_wd_r <- max(M1$wd_m_raster)
M1_max_f_r <- max(M1$froude_raster)
M1_max_s_r <- max(M1$shear_raster)
M1_max_sp_r <- max(M1$stream_raster)

### S1 ### ----------------------------------------------------------------
### MEAN ###
S1_mean_v <- mean(S1$velocity)
S1_mean_wd <- mean(S1$wd_m)
S1_mean_f <- mean(S1$froude)
S1_mean_s <- mean(S1$shear_stress)
S1_mean_sp <- mean(S1$stream_power)

S1_mean_v_r <- mean(S1$v_raster)
S1_mean_wd_r <- mean(S1$wd_m_raster)
S1_mean_f_r <- mean(S1$froude_raster)
S1_mean_s_r <- mean(S1$shear_raster)
S1_mean_sp_r <- mean(S1$stream_raster)

### SD ### 
S1_sd_v <- sd(S1$velocity)
S1_sd_wd <- sd(S1$wd_m)
S1_sd_f <- sd(S1$froude)
S1_sd_s <- sd(S1$shear_stress)
S1_sd_sp <- sd(S1$stream_power)

S1_sd_v_r <- sd(S1$v_raster)
S1_sd_wd_r <- sd(S1$wd_m_raster)
S1_sd_f_r <- sd(S1$froude_raster)
S1_sd_s_r <- sd(S1$shear_raster)
S1_sd_sp_r <- sd(S1$stream_raster)

### MIN ### 
S1_min_v <- min(S1$velocity)
S1_min_wd <- min(S1$wd_m)
S1_min_f <- min(S1$froude)
S1_min_s <- min(S1$shear_stress)
S1_min_sp <- min(S1$stream_power)

S1_min_v_r <- min(S1$v_raster)
S1_min_wd_r <- min(S1$wd_m_raster)
S1_min_f_r <- min(S1$froude_raster)
S1_min_s_r <- min(S1$shear_raster)
S1_min_sp_r <- min(S1$stream_raster)

### MAX ### 
S1_max_v <- max(S1$velocity)
S1_max_wd <- max(S1$wd_m)
S1_max_f <- max(S1$froude)
S1_max_s <- max(S1$shear_stress)
S1_max_sp <- max(S1$stream_power)

S1_max_v_r <- max(S1$v_raster)
S1_max_wd_r <- max(S1$wd_m_raster)
S1_max_f_r <- max(S1$froude_raster)
S1_max_s_r <- max(S1$shear_raster)
S1_max_sp_r <- max(S1$stream_raster)

### S2 ### ----------------------------------------------------------------
### MEAN ###
S2_mean_v <- mean(S2$velocity)
S2_mean_wd <- mean(S2$wd_m)
S2_mean_f <- mean(S2$froude)
S2_mean_s <- mean(S2$shear_stress)
S2_mean_sp <- mean(S2$stream_power)

S2_mean_v_r <- mean(S2$v_raster)
S2_mean_wd_r <- mean(S2$wd_m_raster)
S2_mean_f_r <- mean(S2$froude_raster)
S2_mean_s_r <- mean(S2$shear_raster)
S2_mean_sp_r <- mean(S2$stream_raster)

### SD ### 
S2_sd_v <- sd(S2$velocity)
S2_sd_wd <- sd(S2$wd_m)
S2_sd_f <- sd(S2$froude)
S2_sd_s <- sd(S2$shear_stress)
S2_sd_sp <- sd(S2$stream_power)

S2_sd_v_r <- sd(S2$v_raster)
S2_sd_wd_r <- sd(S2$wd_m_raster)
S2_sd_f_r <- sd(S2$froude_raster)
S2_sd_s_r <- sd(S2$shear_raster)
S2_sd_sp_r <- sd(S2$stream_raster)

### MIN ### 
S2_min_v <- min(S2$velocity)
S2_min_wd <- min(S2$wd_m)
S2_min_f <- min(S2$froude)
S2_min_s <- min(S2$shear_stress)
S2_min_sp <- min(S2$stream_power)

S2_min_v_r <- min(S2$v_raster)
S2_min_wd_r <- min(S2$wd_m_raster)
S2_min_f_r <- min(S2$froude_raster)
S2_min_s_r <- min(S2$shear_raster)
S2_min_sp_r <- min(S2$stream_raster)

### MAX ### 
S2_max_v <- max(S2$velocity)
S2_max_wd <- max(S2$wd_m)
S2_max_f <- max(S2$froude)
S2_max_s <- max(S2$shear_stress)
S2_max_sp <- max(S2$stream_power)

S2_max_v_r <- max(S2$v_raster)
S2_max_wd_r <- max(S2$wd_m_raster)
S2_max_f_r <- max(S2$froude_raster)
S2_max_s_r <- max(S2$shear_raster)
S2_max_sp_r <- max(S2$stream_raster)

### TH4 ### ----------------------------------------------------------------
### MEAN ###
TH4_mean_v <- mean(TH4$velocity)
TH4_mean_wd <- mean(TH4$wd_m)
TH4_mean_f <- mean(TH4$froude)
TH4_mean_s <- mean(TH4$shear_stress)
TH4_mean_sp <- mean(TH4$stream_power)

TH4_mean_v_r <- mean(TH4$v_raster)
TH4_mean_wd_r <- mean(TH4$wd_m_raster)
TH4_mean_f_r <- mean(TH4$froude_raster)
TH4_mean_s_r <- mean(TH4$shear_raster)
TH4_mean_sp_r <- mean(TH4$stream_raster)

### SD ### 
TH4_sd_v <- sd(TH4$velocity)
TH4_sd_wd <- sd(TH4$wd_m)
TH4_sd_f <- sd(TH4$froude)
TH4_sd_s <- sd(TH4$shear_stress)
TH4_sd_sp <- sd(TH4$stream_power)

TH4_sd_v_r <- sd(TH4$v_raster)
TH4_sd_wd_r <- sd(TH4$wd_m_raster)
TH4_sd_f_r <- sd(TH4$froude_raster)
TH4_sd_s_r <- sd(TH4$shear_raster)
TH4_sd_sp_r <- sd(TH4$stream_raster)

### MIN ### 
TH4_min_v <- min(TH4$velocity)
TH4_min_wd <- min(TH4$wd_m)
TH4_min_f <- min(TH4$froude)
TH4_min_s <- min(TH4$shear_stress)
TH4_min_sp <- min(TH4$stream_power)

TH4_min_v_r <- min(TH4$v_raster)
TH4_min_wd_r <- min(TH4$wd_m_raster)
TH4_min_f_r <- min(TH4$froude_raster)
TH4_min_s_r <- min(TH4$shear_raster)
TH4_min_sp_r <- min(TH4$stream_raster)

### MAX ### 
TH4_max_v <- max(TH4$velocity)
TH4_max_wd <- max(TH4$wd_m)
TH4_max_f <- max(TH4$froude)
TH4_max_s <- max(TH4$shear_stress)
TH4_max_sp <- max(TH4$stream_power)

TH4_max_v_r <- max(TH4$v_raster)
TH4_max_wd_r <- max(TH4$wd_m_raster)
TH4_max_f_r <- max(TH4$froude_raster)
TH4_max_s_r <- max(TH4$shear_raster)
TH4_max_sp_r <- max(TH4$stream_raster)

### VR3 ### ----------------------------------------------------------------
### MEAN ###
VR3_mean_v <- mean(VR3$velocity)
VR3_mean_wd <- mean(VR3$wd_m)
VR3_mean_f <- mean(VR3$froude)
VR3_mean_s <- mean(VR3$shear_stress)
VR3_mean_sp <- mean(VR3$stream_power)

VR3_mean_v_r <- mean(VR3$v_raster)
VR3_mean_wd_r <- mean(VR3$wd_m_raster)
VR3_mean_f_r <- mean(VR3$froude_raster)
VR3_mean_s_r <- mean(VR3$shear_raster)
VR3_mean_sp_r <- mean(VR3$stream_raster)

### SD ### 
VR3_sd_v <- sd(VR3$velocity)
VR3_sd_wd <- sd(VR3$wd_m)
VR3_sd_f <- sd(VR3$froude)
VR3_sd_s <- sd(VR3$shear_stress)
VR3_sd_sp <- sd(VR3$stream_power)

VR3_sd_v_r <- sd(VR3$v_raster)
VR3_sd_wd_r <- sd(VR3$wd_m_raster)
VR3_sd_f_r <- sd(VR3$froude_raster)
VR3_sd_s_r <- sd(VR3$shear_raster)
VR3_sd_sp_r <- sd(VR3$stream_raster)

### MIN ### 
VR3_min_v <- min(VR3$velocity)
VR3_min_wd <- min(VR3$wd_m)
VR3_min_f <- min(VR3$froude)
VR3_min_s <- min(VR3$shear_stress)
VR3_min_sp <- min(VR3$stream_power)

VR3_min_v_r <- min(VR3$v_raster)
VR3_min_wd_r <- min(VR3$wd_m_raster)
VR3_min_f_r <- min(VR3$froude_raster)
VR3_min_s_r <- min(VR3$shear_raster)
VR3_min_sp_r <- min(VR3$stream_raster)

### MAX ### 
VR3_max_v <- max(VR3$velocity)
VR3_max_wd <- max(VR3$wd_m)
VR3_max_f <- max(VR3$froude)
VR3_max_s <- max(VR3$shear_stress)
VR3_max_sp <- max(VR3$stream_power)

VR3_max_v_r <- max(VR3$v_raster)
VR3_max_wd_r <- max(VR3$wd_m_raster)
VR3_max_f_r <- max(VR3$froude_raster)
VR3_max_s_r <- max(VR3$shear_raster)
VR3_max_sp_r <- max(VR3$stream_raster)

### ALL ### ----------------------------------------------------------------
### MEAN ###
mean_v <- mean(data_hdm$velocity)
mean_wd <- mean(data_hdm$wd_m)
mean_f <- mean(data_hdm$froude)
mean_s <- mean(data_hdm$shear_stress)
mean_sp <- mean(data_hdm$stream_power)

mean_v_r <- mean(data_hdm$v_raster)
mean_wd_r <- mean(data_hdm$wd_m_raster)
mean_f_r <- mean(data_hdm$froude_raster)
mean_s_r <- mean(data_hdm$shear_raster)
mean_sp_r <- mean(data_hdm$stream_raster)

### SD ### 
sd_v <- sd(data_hdm$velocity)
sd_wd <- sd(data_hdm$wd_m)
sd_f <- sd(data_hdm$froude)
sd_s <- sd(data_hdm$shear_stress)
sd_sp <- sd(data_hdm$stream_power)

sd_v_r <- sd(data_hdm$v_raster)
sd_wd_r <- sd(data_hdm$wd_m_raster)
sd_f_r <- sd(data_hdm$froude_raster)
sd_s_r <- sd(data_hdm$shear_raster)
sd_sp_r <- sd(data_hdm$stream_raster)

### MIN ### 
min_v <- min(data_hdm$velocity)
min_wd <- min(data_hdm$wd_m)
min_f <- min(data_hdm$froude)
min_s <- min(data_hdm$shear_stress)
min_sp <- min(data_hdm$stream_power)

min_v_r <- min(data_hdm$v_raster)
min_wd_r <- min(data_hdm$wd_m_raster)
min_f_r <- min(data_hdm$froude_raster)
min_s_r <- min(data_hdm$shear_raster)
min_sp_r <- min(data_hdm$stream_raster)

### MAX ### 
max_v <- max(data_hdm$velocity)
max_wd <- max(data_hdm$wd_m)
max_f <- max(data_hdm$froude)
max_s <- max(data_hdm$shear_stress)
max_sp <- max(data_hdm$stream_power)

max_v_r <- max(data_hdm$v_raster)
max_wd_r <- max(data_hdm$wd_m_raster)
max_f_r <- max(data_hdm$froude_raster)
max_s_r <- max(data_hdm$shear_raster)
max_sp_r <- max(data_hdm$stream_raster)
```

# Regr. Analysis
## Models
```{r}
## GL1 
regr_v_GL1 <- lm(v_raster ~ velocity, data = GL1)
sum_v_GL1 <- summary(regr_v_GL1)
p_v_GL1 <- sum_v_GL1$coefficients["velocity", "Pr(>|t|)"]
s_v_GL1 <- sum_v_GL1$coefficients["velocity", "Estimate"]

regr_wd_GL1 <- lm(wd_m_raster ~ wd_m, data = GL1)
sum_wd_GL1 <- summary(regr_wd_GL1)
p_wd_GL1 <- sum_wd_GL1$coefficients["wd_m", "Pr(>|t|)"]
s_wd_GL1 <- sum_wd_GL1$coefficients["wd_m", "Estimate"]

regr_f_GL1 <- lm(froude_raster ~ froude, data = GL1)
sum_f_GL1 <- summary(regr_f_GL1)
p_f_GL1 <- sum_f_GL1$coefficients["froude", "Pr(>|t|)"]
s_f_GL1 <- sum_f_GL1$coefficients["froude", "Estimate"]

regr_s_GL1 <- lm(shear_raster ~ shear_stress, data = GL1)
sum_s_GL1 <- summary(regr_s_GL1)
p_s_GL1 <- sum_s_GL1$coefficients["shear_stress", "Pr(>|t|)"]
s_s_GL1 <- sum_s_GL1$coefficients["shear_stress", "Estimate"]

regr_sp_GL1 <- lm(stream_raster ~ stream_power, data = GL1)
sum_sp_GL1 <- summary(regr_sp_GL1)
p_sp_GL1 <- sum_sp_GL1$coefficients["stream_power", "Pr(>|t|)"]
s_sp_GL1 <- sum_sp_GL1$coefficients["stream_power", "Estimate"]

## GL2
regr_v_GL2 <- lm(v_raster ~ velocity, data = GL2)
sum_v_GL2 <- summary(regr_v_GL2)
p_v_GL2 <- sum_v_GL2$coefficients["velocity", "Pr(>|t|)"]
s_v_GL2 <- sum_v_GL2$coefficients["velocity", "Estimate"]

regr_wd_GL2 <- lm(wd_m_raster ~ wd_m, data = GL2)
sum_wd_GL2 <- summary(regr_wd_GL2)
p_wd_GL2 <- sum_wd_GL2$coefficients["wd_m", "Pr(>|t|)"]
s_wd_GL2 <- sum_wd_GL2$coefficients["wd_m", "Estimate"]

regr_f_GL2 <- lm(froude_raster ~ froude, data = GL2)
sum_f_GL2 <- summary(regr_f_GL2)
p_f_GL2 <- sum_f_GL2$coefficients["froude", "Pr(>|t|)"]
s_f_GL2 <- sum_f_GL2$coefficients["froude", "Estimate"]

regr_s_GL2 <- lm(shear_raster ~ shear_stress, data = GL2)
sum_s_GL2 <- summary(regr_s_GL2)
p_s_GL2 <- sum_s_GL2$coefficients["shear_stress", "Pr(>|t|)"]
s_s_GL2 <- sum_s_GL2$coefficients["shear_stress", "Estimate"]

regr_sp_GL2 <- lm(stream_raster ~ stream_power, data = GL2)
sum_sp_GL2 <- summary(regr_sp_GL2)
p_sp_GL2 <- sum_sp_GL2$coefficients["stream_power", "Pr(>|t|)"]
s_sp_GL2 <- sum_sp_GL2$coefficients["stream_power", "Estimate"]

## L2
regr_v_L2 <- lm(v_raster ~ velocity, data = L2)
sum_v_L2 <- summary(regr_v_L2)
p_v_L2 <- sum_v_L2$coefficients["velocity", "Pr(>|t|)"]
s_v_L2 <- sum_v_L2$coefficients["velocity", "Estimate"]

regr_wd_L2 <- lm(wd_m_raster ~ wd_m, data = L2)
sum_wd_L2 <- summary(regr_wd_L2)
p_wd_L2 <- sum_wd_L2$coefficients["wd_m", "Pr(>|t|)"]
s_wd_L2 <- sum_wd_L2$coefficients["wd_m", "Estimate"]

regr_f_L2 <- lm(froude_raster ~ froude, data = L2)
sum_f_L2 <- summary(regr_f_L2)
p_f_L2 <- sum_f_L2$coefficients["froude", "Pr(>|t|)"]
s_f_L2 <- sum_f_L2$coefficients["froude", "Estimate"]

regr_s_L2 <- lm(shear_raster ~ shear_stress, data = L2)
sum_s_L2 <- summary(regr_s_L2)
p_s_L2 <- sum_s_L2$coefficients["shear_stress", "Pr(>|t|)"]
s_s_L2 <- sum_s_L2$coefficients["shear_stress", "Estimate"]

regr_sp_L2 <- lm(stream_raster ~ stream_power, data = L2)
sum_sp_L2 <- summary(regr_sp_L2)
p_sp_L2 <- sum_sp_L2$coefficients["stream_power", "Pr(>|t|)"]
s_sp_L2 <- sum_sp_L2$coefficients["stream_power", "Estimate"]

## M1
regr_v_M1 <- lm(v_raster ~ velocity, data = M1)
sum_v_M1 <- summary(regr_v_M1)
p_v_M1 <- sum_v_M1$coefficients["velocity", "Pr(>|t|)"]
s_v_M1 <- sum_v_M1$coefficients["velocity", "Estimate"]

regr_wd_M1 <- lm(wd_m_raster ~ wd_m, data = M1)
sum_wd_M1 <- summary(regr_wd_M1)
p_wd_M1 <- sum_wd_M1$coefficients["wd_m", "Pr(>|t|)"]
s_wd_M1 <- sum_wd_M1$coefficients["wd_m", "Estimate"]

regr_f_M1 <- lm(froude_raster ~ froude, data = M1)
sum_f_M1 <- summary(regr_f_M1)
p_f_M1 <- sum_f_M1$coefficients["froude", "Pr(>|t|)"]
s_f_M1 <- sum_f_M1$coefficients["froude", "Estimate"]

regr_s_M1 <- lm(shear_raster ~ shear_stress, data = M1)
sum_s_M1 <- summary(regr_s_M1)
p_s_M1 <- sum_s_M1$coefficients["shear_stress", "Pr(>|t|)"]
s_s_M1 <- sum_s_M1$coefficients["shear_stress", "Estimate"]

regr_sp_M1 <- lm(stream_raster ~ stream_power, data = M1)
sum_sp_M1 <- summary(regr_sp_M1)
p_sp_M1 <- sum_sp_M1$coefficients["stream_power", "Pr(>|t|)"]
s_sp_M1 <- sum_sp_M1$coefficients["stream_power", "Estimate"]

## S1
regr_v_S1 <- lm(v_raster ~ velocity, data = S1)
sum_v_S1 <- summary(regr_v_S1)
p_v_S1 <- sum_v_S1$coefficients["velocity", "Pr(>|t|)"]
s_v_S1 <- sum_v_S1$coefficients["velocity", "Estimate"]

regr_wd_S1 <- lm(wd_m_raster ~ wd_m, data = S1)
sum_wd_S1 <- summary(regr_wd_S1)
p_wd_S1 <- sum_wd_S1$coefficients["wd_m", "Pr(>|t|)"]
s_wd_S1 <- sum_wd_S1$coefficients["wd_m", "Estimate"]

regr_f_S1 <- lm(froude_raster ~ froude, data = S1)
sum_f_S1 <- summary(regr_f_S1)
p_f_S1 <- sum_f_S1$coefficients["froude", "Pr(>|t|)"]
s_f_S1 <- sum_f_S1$coefficients["froude", "Estimate"]

regr_s_S1 <- lm(shear_raster ~ shear_stress, data = S1)
sum_s_S1 <- summary(regr_s_S1)
p_s_S1 <- sum_s_S1$coefficients["shear_stress", "Pr(>|t|)"]
s_s_S1 <- sum_s_S1$coefficients["shear_stress", "Estimate"]

regr_sp_S1 <- lm(stream_raster ~ stream_power, data = S1)
sum_sp_S1 <- summary(regr_sp_S1)
p_sp_S1 <- sum_sp_S1$coefficients["stream_power", "Pr(>|t|)"]
s_sp_S1 <- sum_sp_S1$coefficients["stream_power", "Estimate"]

## S2
regr_v_S2 <- lm(v_raster ~ velocity, data = S2)
sum_v_S2 <- summary(regr_v_S2)
p_v_S2 <- sum_v_S2$coefficients["velocity", "Pr(>|t|)"]
s_v_S2 <- sum_v_S2$coefficients["velocity", "Estimate"]

regr_wd_S2 <- lm(wd_m_raster ~ wd_m, data = S2)
sum_wd_S2 <- summary(regr_wd_S2)
p_wd_S2 <- sum_wd_S2$coefficients["wd_m", "Pr(>|t|)"]
s_wd_S2 <- sum_wd_S2$coefficients["wd_m", "Estimate"]

regr_f_S2 <- lm(froude_raster ~ froude, data = S2)
sum_f_S2 <- summary(regr_f_S2)
p_f_S2 <- sum_f_S2$coefficients["froude", "Pr(>|t|)"]
s_f_S2 <- sum_f_S2$coefficients["froude", "Estimate"]

regr_s_S2 <- lm(shear_raster ~ shear_stress, data = S2)
sum_s_S2 <- summary(regr_s_S2)
p_s_S2 <- sum_s_S2$coefficients["shear_stress", "Pr(>|t|)"]
s_s_S2 <- sum_s_S2$coefficients["shear_stress", "Estimate"]

regr_sp_S2 <- lm(stream_raster ~ stream_power, data = S2)
sum_sp_S2 <- summary(regr_sp_S2)
p_sp_S2 <- sum_sp_S2$coefficients["stream_power", "Pr(>|t|)"]
s_sp_S2 <- sum_sp_S2$coefficients["stream_power", "Estimate"]

## TH4
regr_v_TH4 <- lm(v_raster ~ velocity, data = TH4)
sum_v_TH4 <- summary(regr_v_TH4)
p_v_TH4 <- sum_v_TH4$coefficients["velocity", "Pr(>|t|)"]
s_v_TH4 <- sum_v_TH4$coefficients["velocity", "Estimate"]

regr_wd_TH4 <- lm(wd_m_raster ~ wd_m, data = TH4)
sum_wd_TH4 <- summary(regr_wd_TH4)
p_wd_TH4 <- sum_wd_TH4$coefficients["wd_m", "Pr(>|t|)"]
s_wd_TH4 <- sum_wd_TH4$coefficients["wd_m", "Estimate"]

regr_f_TH4 <- lm(froude_raster ~ froude, data = TH4)
sum_f_TH4 <- summary(regr_f_TH4)
p_f_TH4 <- sum_f_TH4$coefficients["froude", "Pr(>|t|)"]
s_f_TH4 <- sum_f_TH4$coefficients["froude", "Estimate"]

regr_s_TH4 <- lm(shear_raster ~ shear_stress, data = TH4)
sum_s_TH4 <- summary(regr_s_TH4)
p_s_TH4 <- sum_s_TH4$coefficients["shear_stress", "Pr(>|t|)"]
s_s_TH4 <- sum_s_TH4$coefficients["shear_stress", "Estimate"]

regr_sp_TH4 <- lm(stream_raster ~ stream_power, data = TH4)
sum_sp_TH4 <- summary(regr_sp_TH4)
p_sp_TH4 <- sum_sp_TH4$coefficients["stream_power", "Pr(>|t|)"]
s_sp_TH4 <- sum_sp_TH4$coefficients["stream_power", "Estimate"]

## VR3
regr_v_VR3 <- lm(v_raster ~ velocity, data = VR3)
sum_v_VR3 <- summary(regr_v_VR3)
p_v_VR3 <- sum_v_VR3$coefficients["velocity", "Pr(>|t|)"]
s_v_VR3 <- sum_v_VR3$coefficients["velocity", "Estimate"]

regr_wd_VR3 <- lm(wd_m_raster ~ wd_m, data = VR3)
sum_wd_VR3 <- summary(regr_wd_VR3)
p_wd_VR3 <- sum_wd_VR3$coefficients["wd_m", "Pr(>|t|)"]
s_wd_VR3 <- sum_wd_VR3$coefficients["wd_m", "Estimate"]

regr_f_VR3 <- lm(froude_raster ~ froude, data = VR3)
sum_f_VR3 <- summary(regr_f_VR3)
p_f_VR3 <- sum_f_VR3$coefficients["froude", "Pr(>|t|)"]
s_f_VR3 <- sum_f_VR3$coefficients["froude", "Estimate"]

regr_s_VR3 <- lm(shear_raster ~ shear_stress, data = VR3)
sum_s_VR3 <- summary(regr_s_VR3)
p_s_VR3 <- sum_s_VR3$coefficients["shear_stress", "Pr(>|t|)"]
s_s_VR3 <- sum_s_VR3$coefficients["shear_stress", "Estimate"]

regr_sp_VR3 <- lm(stream_raster ~ stream_power, data = VR3)
sum_sp_VR3 <- summary(regr_sp_VR3)
p_sp_VR3 <- sum_sp_VR3$coefficients["stream_power", "Pr(>|t|)"]
s_sp_VR3 <- sum_sp_VR3$coefficients["stream_power", "Estimate"]

## ALL
regr_v <- lm(v_raster ~ velocity, data = data_hdm)
sum_v <- summary(regr_v)
p_v <- sum_v$coefficients["velocity", "Pr(>|t|)"]
s_v <- sum_v$coefficients["velocity", "Estimate"]

regr_wd <- lm(wd_m_raster ~ wd_m, data = data_hdm)
sum_wd <- summary(regr_wd)
p_wd <- sum_wd$coefficients["wd_m", "Pr(>|t|)"]
s_wd <- sum_wd$coefficients["wd_m", "Estimate"]

regr_f <- lm(froude_raster ~ froude, data = data_hdm)
sum_f <- summary(regr_f)
p_f <- sum_f$coefficients["froude", "Pr(>|t|)"]
s_f <- sum_f$coefficients["froude", "Estimate"]

regr_s <- lm(shear_raster ~ shear_stress, data = data_hdm)
sum_s <- summary(regr_s)
p_s <- sum_s$coefficients["shear_stress", "Pr(>|t|)"]
s_s <- sum_s$coefficients["shear_stress", "Estimate"]

regr_sp <- lm(stream_raster ~ stream_power, data = data_hdm)
sum_sp <- summary(regr_sp)
p_sp <- sum_sp$coefficients["stream_power", "Pr(>|t|)"]
s_sp <- sum_sp$coefficients["stream_power", "Estimate"]
```

## Stat. Analysis
```{r}
# Modellvoraussetzungen prüfen - residualplot 
par(mfrow=c(2, 2))
plot(regr_v_GL1)
plot(regr_wd_GL1)
plot(regr_f_GL1)
plot(regr_s_GL1)
plot(regr_sp_GL1)

plot(regr_v_GL2)
plot(regr_wd_GL2)
plot(regr_f_GL2)
plot(regr_s_GL2)
plot(regr_sp_GL2)

plot(regr_v_L2)
plot(regr_wd_L2)
plot(regr_f_L2)
plot(regr_s_L2)
plot(regr_sp_L2)

plot(regr_v_M1)
plot(regr_wd_M1)
plot(regr_f_M1)
plot(regr_s_M1)
plot(regr_sp_M1)

plot(regr_v_S1)
plot(regr_wd_S1)
plot(regr_f_S1)
plot(regr_s_S1)
plot(regr_sp_S1)

plot(regr_v_S2)
plot(regr_wd_S2)
plot(regr_f_S2)
plot(regr_s_S2)
plot(regr_sp_S2)

plot(regr_v_TH4)
plot(regr_wd_TH4)
plot(regr_f_TH4)
plot(regr_s_TH4)
plot(regr_sp_TH4)

plot(regr_v_VR3)
plot(regr_wd_VR3)
plot(regr_f_VR3)
plot(regr_s_VR3)
plot(regr_sp_VR3)

plot(regr_v) # OK
plot(regr_wd) # Residuen nicht normalverteilt, sonst OK
plot(regr_f) # OK
plot(regr_s) # Residien nicht normalverteilt, Linearität fraglich
plot(regr_sp) # Residien nicht normalverteilt, Linearität fraglich

# Normalverteilung Residuen starke abweichung 
# Linearität nicht gegeben aufgrund Bananenform oben links
```

## Plots
```{r}
# Use a colorblind-friendly palette
color_palette <- brewer.pal(8, "RdYlBu")

# velocity --------------------------------------------------------------------
vel <- ggplot(data_hdm, aes(velocity, v_raster, col = Reach_Untersuchungsstelle)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0, lty = 2, lwd = 0.8) +
  stat_smooth(method = "lm", se = FALSE, fullrange = TRUE, lwd = 0.8, col = "black") +
  theme_minimal() +
  ylim(0, 1.0) +
  xlim(0, 1.0) + 
  labs(
    x = "Velocity Measured (m/s)",
    y = "Velocity Simulated (m/s)",
    col = "Study Area"
  ) +
  theme_minimal() +
  theme(axis.text = element_text(size=14),
        axis.title = element_text(size=16),
    legend.title = element_text(size = 16, face = "bold"),  
    legend.text = element_text(size = 14)) +
  scale_color_manual(values = color_palette) 

# save the plots 
ggsave("Stat_Analysis/regr_plots/regr_velocity.png", plot = vel, width = 7, height = 5)

# water depth ----------------------------------------------------------------
wd <- ggplot(data_hdm, aes(wd_m, wd_m_raster, col = Reach_Untersuchungsstelle)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0, lty = 2, lwd = 0.8) +
  stat_smooth(method = "lm", se = FALSE, fullrange = TRUE, lwd = 0.8, col = "black") +
  theme_minimal() +
  ylim(0, 1.0) +
  xlim(0, 1.0) + 
  labs(
    x = "Water Depth Measured (m)",
    y = "Water Depth Simulated (m/s)",
    col = "Study Area"
  ) +
  theme_minimal() +
  theme(axis.text = element_text(size=14),
        axis.title = element_text(size=16),
    legend.title = element_text(size = 16, face = "bold"),  
    legend.text = element_text(size = 14)) +
  scale_color_manual(values = color_palette) 

# save the plots 
ggsave("Stat_Analysis/regr_plots/regr_wd.png", plot = wd, width = 7, height = 5)
```


# Create dataframe
```{r}
results_hdm <- data.frame(lm_p_value = c(p_v_GL1, p_wd_GL1, p_f_GL1, p_s_GL1, p_sp_GL1, p_v_GL2, p_wd_GL2, p_f_GL2, p_s_GL2, p_sp_GL2, p_v_L2, p_wd_L2, p_f_L2, p_s_L2, p_sp_L2, p_v_M1, p_wd_M1, p_f_M1, p_s_M1, p_sp_M1, p_v_S1, p_wd_S1, p_f_S1, p_s_S1, p_sp_S1, p_v_S2, p_wd_S2, p_f_S2, p_s_S2, p_sp_S2, p_v_TH4, p_wd_TH4, p_f_TH4, p_s_TH4, p_sp_TH4, p_v_VR3, p_wd_VR3, p_f_VR3, p_s_VR3, p_sp_VR3, p_v, p_wd, p_f, p_s, p_sp),
                          
                          lm_slope = c(s_v_GL1, s_wd_GL1, s_f_GL1, s_s_GL1, s_sp_GL1, s_v_GL2, s_wd_GL2, s_f_GL2, s_s_GL2, s_sp_GL2, s_v_L2, s_wd_L2, s_f_L2, s_s_L2, s_sp_L2, s_v_M1, s_wd_M1, s_f_M1, s_s_M1, s_sp_M1, s_v_S1, s_wd_S1, s_f_S1, s_s_S1, s_sp_S1, s_v_S2, s_wd_S2, s_f_S2, s_s_S2, s_sp_S2, s_v_TH4, s_wd_TH4, s_f_TH4, s_s_TH4, s_sp_TH4, s_v_VR3, s_wd_VR3, s_f_VR3, s_s_VR3, s_sp_VR3, s_v, s_wd, s_f, s_s, s_sp),
                          
  rmse = c(rmse_v_GL1, rmse_wd_GL1, rmse_f_GL1, rmse_s_GL1, rmse_sp_GL1, rmse_v_GL2, rmse_wd_GL2, rmse_f_GL2, rmse_s_GL2, rmse_sp_GL2, rmse_v_L2, rmse_wd_L2, rmse_f_L2, rmse_s_L2, rmse_sp_L2, rmse_v_M1, rmse_wd_M1, rmse_f_M1, rmse_s_M1, rmse_sp_M1, rmse_v_S1, rmse_wd_S1, rmse_f_S1, rmse_s_S1, rmse_sp_S1, rmse_v_S2, rmse_wd_S2, rmse_f_S2, rmse_s_S2, rmse_sp_S2, rmse_v_TH4, rmse_wd_TH4, rmse_f_TH4, rmse_s_TH4, rmse_sp_TH4, rmse_v_VR3, rmse_wd_VR3, rmse_f_VR3, rmse_s_VR3, rmse_sp_VR3, rmse_v, rmse_wd, rmse_f, rmse_s, rmse_sp),
  
           mae = c(mae_v_GL1, mae_wd_GL1, mae_f_GL1, mae_s_GL1, mae_sp_GL1, mae_v_GL2, mae_wd_GL2, mae_f_GL2, mae_s_GL2, mae_sp_GL2, mae_v_L2, mae_wd_L2, mae_f_L2, mae_s_L2, mae_sp_L2, mae_v_M1, mae_wd_M1, mae_f_M1, mae_s_M1, mae_sp_M1, mae_v_S1, mae_wd_S1, mae_f_S1, mae_s_S1, mae_sp_S1, mae_v_S2, mae_wd_S2, mae_f_S2, mae_s_S2, mae_sp_S2, mae_v_TH4, mae_wd_TH4, mae_f_TH4, mae_s_TH4, mae_sp_TH4, mae_v_VR3, mae_wd_VR3, mae_f_VR3, mae_s_VR3, mae_sp_VR3, mae_v, mae_wd, mae_f, mae_s, mae_sp),
  
  nse = c(nse_v_GL1, nse_wd_GL1, nse_f_GL1, nse_s_GL1, nse_sp_GL1, nse_v_GL2, nse_wd_GL2, nse_f_GL2, nse_s_GL2, nse_sp_GL2, nse_v_L2, nse_wd_L2, nse_f_L2, nse_s_L2, nse_sp_L2, nse_v_M1, nse_wd_M1, nse_f_M1, nse_s_M1, nse_sp_M1, nse_v_S1, nse_wd_S1, nse_f_S1, nse_s_S1, nse_sp_S1, nse_v_S2, nse_wd_S2, nse_f_S2, nse_s_S2, nse_sp_S2, nse_v_TH4, nse_wd_TH4, nse_f_TH4, nse_s_TH4, nse_sp_TH4, nse_v_VR3, nse_wd_VR3, nse_f_VR3, nse_s_VR3, nse_sp_VR3, nse_v, nse_wd, nse_f, nse_s, nse_sp),
  
  mean_obs = c(GL1_mean_v, GL1_mean_wd, GL1_mean_f, GL1_mean_s, GL1_mean_sp, GL2_mean_v, GL2_mean_wd, GL2_mean_f, GL2_mean_s, GL2_mean_sp, L2_mean_v, L2_mean_wd, L2_mean_f, L2_mean_s, L2_mean_sp, M1_mean_v, M1_mean_wd, M1_mean_f, M1_mean_s, M1_mean_sp, S1_mean_v, S1_mean_wd, S1_mean_f, S1_mean_s, S1_mean_sp, S2_mean_v, S2_mean_wd, S2_mean_f, S2_mean_s, S2_mean_sp, TH4_mean_v, TH4_mean_wd, TH4_mean_f, TH4_mean_s, TH4_mean_sp, VR3_mean_v, VR3_mean_wd, VR3_mean_f, VR3_mean_s, VR3_mean_sp, mean_v, mean_wd, mean_f, mean_s, mean_sp), 
  
  mean_raster = c(GL1_mean_v_r, GL1_mean_wd_r, GL1_mean_f_r, GL1_mean_s_r, GL1_mean_sp_r, GL2_mean_v_r, GL2_mean_wd_r, GL2_mean_f_r, GL2_mean_s_r, GL2_mean_sp_r, L2_mean_v_r, L2_mean_wd_r, L2_mean_f_r, L2_mean_s_r, L2_mean_sp_r, M1_mean_v_r, M1_mean_wd_r, M1_mean_f_r, M1_mean_s_r, M1_mean_sp_r, S1_mean_v_r, S1_mean_wd_r, S1_mean_f_r, S1_mean_s_r, S1_mean_sp_r, S2_mean_v_r, S2_mean_wd_r, S2_mean_f_r, S2_mean_s_r, S2_mean_sp_r, TH4_mean_v_r, TH4_mean_wd_r, TH4_mean_f_r, TH4_mean_s_r, TH4_mean_sp_r, VR3_mean_v_r, VR3_mean_wd_r, VR3_mean_f_r, VR3_mean_s_r, VR3_mean_sp_r, mean_v_r, mean_wd_r, mean_f_r, mean_s_r, mean_sp_r), 
  
  sd_obs = c(GL1_sd_v, GL1_sd_wd, GL1_sd_f, GL1_sd_s, GL1_sd_sp, GL2_sd_v, GL2_sd_wd, GL2_sd_f, GL2_sd_s, GL2_sd_sp, L2_sd_v, L2_sd_wd, L2_sd_f, L2_sd_s, L2_sd_sp, M1_sd_v, M1_sd_wd, M1_sd_f, M1_sd_s, M1_sd_sp, S1_sd_v, S1_sd_wd, S1_sd_f, S1_sd_s, S1_sd_sp, S2_sd_v, S2_sd_wd, S2_sd_f, S2_sd_s, S2_sd_sp, TH4_sd_v, TH4_sd_wd, TH4_sd_f, TH4_sd_s, TH4_sd_sp, VR3_sd_v, VR3_sd_wd, VR3_sd_f, VR3_sd_s, VR3_sd_sp, sd_v, sd_wd, sd_f, sd_s, sd_sp), 
  
  sd_raster = c(GL1_sd_v_r, GL1_sd_wd_r, GL1_sd_f_r, GL1_sd_s_r, GL1_sd_sp_r, GL2_sd_v_r, GL2_sd_wd_r, GL2_sd_f_r, GL2_sd_s_r, GL2_sd_sp_r, L2_sd_v_r, L2_sd_wd_r, L2_sd_f_r, L2_sd_s_r, L2_sd_sp_r, M1_sd_v_r, M1_sd_wd_r, M1_sd_f_r, M1_sd_s_r, M1_sd_sp_r, S1_sd_v_r, S1_sd_wd_r, S1_sd_f_r, S1_sd_s_r, S1_sd_sp_r, S2_sd_v_r, S2_sd_wd_r, S2_sd_f_r, S2_sd_s_r, S2_sd_sp_r, TH4_sd_v_r, TH4_sd_wd_r, TH4_sd_f_r, TH4_sd_s_r, TH4_sd_sp_r, VR3_sd_v_r, VR3_sd_wd_r, VR3_sd_f_r, VR3_sd_s_r, VR3_sd_sp_r, sd_v_r, sd_wd_r, sd_f_r, sd_s_r, sd_sp_r),
  
  min_obs = c(GL1_min_v, GL1_min_wd, GL1_min_f, GL1_min_s, GL1_min_sp, GL2_min_v, GL2_min_wd, GL2_min_f, GL2_min_s, GL2_min_sp, L2_min_v, L2_min_wd, L2_min_f, L2_min_s, L2_min_sp, M1_min_v, M1_min_wd, M1_min_f, M1_min_s, M1_min_sp, S1_min_v, S1_min_wd, S1_min_f, S1_min_s, S1_min_sp, S2_min_v, S2_min_wd, S2_min_f, S2_min_s, S2_min_sp, TH4_min_v, TH4_min_wd, TH4_min_f, TH4_min_s, TH4_min_sp, VR3_min_v, VR3_min_wd, VR3_min_f, VR3_min_s, VR3_min_sp, min_v, min_wd, min_f, min_s, min_sp),
  
  min_raster = c(GL1_min_v_r, GL1_min_wd_r, GL1_min_f_r, GL1_min_s_r, GL1_min_sp_r, GL2_min_v_r, GL2_min_wd_r, GL2_min_f_r, GL2_min_s_r, GL2_min_sp_r, L2_min_v_r, L2_min_wd_r, L2_min_f_r, L2_min_s_r, L2_min_sp_r, M1_min_v_r, M1_min_wd_r, M1_min_f_r, M1_min_s_r, M1_min_sp_r, S1_min_v_r, S1_min_wd_r, S1_min_f_r, S1_min_s_r, S1_min_sp_r, S2_min_v_r, S2_min_wd_r, S2_min_f_r, S2_min_s_r, S2_min_sp_r, TH4_min_v_r, TH4_min_wd_r, TH4_min_f_r, TH4_min_s_r, TH4_min_sp_r, VR3_min_v_r, VR3_min_wd_r, VR3_min_f_r, VR3_min_s_r, VR3_min_sp_r, min_v_r, min_wd_r, min_f_r, min_s_r, min_sp_r),
  
  max_obs = c(GL1_max_v, GL1_max_wd, GL1_max_f, GL1_max_s, GL1_max_sp, GL2_max_v, GL2_max_wd, GL2_max_f, GL2_max_s, GL2_max_sp, L2_max_v, L2_max_wd, L2_max_f, L2_max_s, L2_max_sp, M1_max_v, M1_max_wd, M1_max_f, M1_max_s, M1_max_sp, S1_max_v, S1_max_wd, S1_max_f, S1_max_s, S1_max_sp, S2_max_v, S2_max_wd, S2_max_f, S2_max_s, S2_max_sp, TH4_max_v, TH4_max_wd, TH4_max_f, TH4_max_s, TH4_max_sp, VR3_max_v, VR3_max_wd, VR3_max_f, VR3_max_s, VR3_max_sp, max_v, max_wd, max_f, max_s, max_sp),
  
  max_raster = c(GL1_max_v_r, GL1_max_wd_r, GL1_max_f_r, GL1_max_s_r, GL1_max_sp_r, GL2_max_v_r, GL2_max_wd_r, GL2_max_f_r, GL2_max_s_r, GL2_max_sp_r, L2_max_v_r, L2_max_wd_r, L2_max_f_r, L2_max_s_r, L2_max_sp_r, M1_max_v_r, M1_max_wd_r, M1_max_f_r, M1_max_s_r, M1_max_sp_r, S1_max_v_r, S1_max_wd_r, S1_max_f_r, S1_max_s_r, S1_max_sp_r, S2_max_v_r, S2_max_wd_r, S2_max_f_r, S2_max_s_r, S2_max_sp_r, TH4_max_v_r, TH4_max_wd_r, TH4_max_f_r, TH4_max_s_r, TH4_max_sp_r, VR3_max_v_r, VR3_max_wd_r, VR3_max_f_r, VR3_max_s_r, VR3_max_sp_r, max_v_r, max_wd_r, max_f_r, max_s_r, max_sp_r),
  
           section = c("GL1", "GL1", "GL1", "GL1", "GL1", "GL2", "GL2", "GL2", "GL2", "GL2", "L2", "L2", "L2", "L2", "L2", "M1", "M1", "M1", "M1", "M1", "S1", "S1", "S1", "S1", "S1", "S2", "S2", "S2", "S2", "S2", "TH4", "TH4", "TH4", "TH4", "TH4", "VR3", "VR3", "VR3", "VR3", "VR3", "all", "all", "all", "all", "all"),
  
           variable = c("velocity", "wd", "froude", "shear_stress", "stream_power", "velocity", "wd", "froude", "shear_stress", "stream_power", "velocity", "wd", "froude", "shear_stress", "stream_power", "velocity", "wd", "froude", "shear_stress", "stream_power", "velocity", "wd", "froude", "shear_stress", "stream_power", "velocity", "wd", "froude", "shear_stress", "stream_power", "velocity", "wd", "froude", "shear_stress", "stream_power", "velocity", "wd", "froude", "shear_stress", "stream_power", "velocity", "wd", "froude", "shear_stress", "stream_power"))

# write .csv file 
write.csv(results_hdm, "Stat_Analysis/stat_analysis_data/results_hdm_mi_metrics.csv", row.names = FALSE)
```


