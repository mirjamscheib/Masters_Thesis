---
title: "Reconstruct Discharges of Sampling Days"
format: html
---

# Load packages
```{r}
# clear R memory 
rm(list = ls())

# load packages 
pkgCheck <- function(x){ 
  if (!require(x,character.only = TRUE)){
    install.packages(x,dependencies=TRUE)
    if(!require(x,character.only = TRUE)) {
      stop()
    }
  }
}

pkgCheck("raster")
pkgCheck("spsurvey")
pkgCheck("terra")
pkgCheck("ggplot2")
pkgCheck("tibble")
pkgCheck("readr")
pkgCheck("dplyr")
pkgCheck("tidyr")
pkgCheck("scales")
pkgCheck("hdf5r")
pkgCheck("sp")
pkgCheck("sf")
pkgCheck("spatstat.geom")
pkgCheck("spatstat.explore")
pkgCheck("gstat")
pkgCheck("purrr")
pkgCheck("rgdal")

# load self-written functions 
source("mth_functions.R")
```


## Read/prepare .csv files
```{r}
mzb_data <- read_delim("abiotic_mi_sampling/Abiotic_MI_Lab.csv")

data <- mzb_data |>
  select(x, y, Reach_Untersuchungsstelle, `Flow_velocity_v60_cm/s`, Water_depth_cm, join_key) |>
  rename(reach = Reach_Untersuchungsstelle,
         v_measured = `Flow_velocity_v60_cm/s`,
         wd_measured = Water_depth_cm)

# function to extract and prepare data
prep_data <- function(data, reach_name, x, y, data_add, v, d){
  data <- subset(reach == reach_name) 
  data <- mutate(x = as.numeric(x),
                 y = as.numeric(y)) 
  data <- select(x, y) 
  data_add <- subset(reach == reach_name) 
  data_add <- select(reach, v, d, join_key)
}

# select only single river sections 
data_GL1 <- data |>
  subset(reach == "GL1") |>
  mutate(x = as.numeric(x),
         y = as.numeric(y)) |>
  select(x, y)

data_GL1_add <- data |>
  subset(reach == "GL1") |>
  select(reach, velocity, depth, join_key)

data_GL2 <- data |>
  subset(reach == "GL2")|>
  mutate(x = as.numeric(x),
         y = as.numeric(y)) |>
  select(x, y)

data_GL2_add <- data |>
  subset(reach == "GL2") |>
  select(reach, velocity, depth, join_key)

data_L2 <- data |>
  subset(reach == "L2")

data_M1 <- data |>
  subset(reach == "M1")

data_S1 <- data |>
  subset(reach == "S1")

data_S2 <- data |>
  subset(reach == "S2")

data_TH4 <- data |>
  subset(reach == "TH4")

data_VR3 <- data |>
  subset(reach == "VR3")
```


## Glenner: GL1
### create Plot df
```{r}
# function to extract and prepare data
extract_data <- function(stack_path, data){
# read stacked raster
stacked <- stack(stack_path)

# extract velocity and water depth information for plots 
section_extract <- terra::extract(stacked, data) |>
  cbind(data_GL1_add) |>
  mutate(depth_measured = depth/100,
         velocity_measured = velocity/100)
}

# read stacked raster
GL1_stacked <- stack("rasters_stacked/GL1_stacked.grd")

# extract velocity and water depth information for plots 
GL1_extract <- terra::extract(GL1_stacked, data_GL1) |>
  cbind(data_GL1_add) |>
  mutate(depth_measured = depth/100,
         velocity_measured = velocity/100)

# extract only measured values 
GL1_measured <- GL1_extract[, c(24:26)] 

# select columns with certain conditions (i want to select columns with v and columns with wd)
df %>%  dplyr::select(contains("date", ignore.case = TRUE))

# create long table with velocity values from rasters
GL1_v <- GL1_extract[ ,c(1,3,5,7,9,11,13,15,17,19, 24)] |>
  pivot_longer(cols = c(1:10),names_to = "discharge_v",
               values_to = "velocity")

# create long table with water depth values from rasters
GL1_wd <- GL1_extract[ ,c(2,4,6,8,10,12,14,16,18,20,24)] |>
  pivot_longer(cols = c(1:10),names_to = "discharge",
               values_to = "water_depth")

GL1_wd$discharge <- gsub("GL1_wd_", "", GL1_wd$discharge)
GL1_wd$discharge <- gsub("_", ".", GL1_wd$discharge)
GL1_wd$discharge <- as.numeric(GL1_wd$discharge)

GL1_plot <- GL1_wd |>
  full_join(GL1_v, by = "join_key") |>
  select(discharge, water_depth, velocity, join_key) |>
  full_join(GL1_measured, by = "join_key")
```


### Plot 
ggplot(GL1_plot, aes(discharge, water_depth, col = join_key)) +
  geom_point() +
  geom_point(data = GL1_plot, aes(y = depth_measured), col = "blue") +
  ggtitle(" ")
```{r}
ggplot(GL1_plot, aes(discharge, water_depth, col = join_key)) +
  geom_line() +
  geom_smooth(se = FALSE)

# Perform linear regression and extract coefficients
lm_model <- lm(water_depth ~ discharge, data = GL1_plot)
slope <- coef(lm_model)[2]
intercept <- coef(lm_model)[1]

# Print slope and intercept
cat("Slope:", slope, "\n")
cat("Intercept:", intercept, "\n")

```

### extract x values
```{r}
# Example data with only Y values
y_values <- c(2, 4, 6, 8, 10)

# Assuming the equation of the line is Y = m*X + b
m <- 2      # Slope
b <- -3     # Intercept

# Calculate X values using the equation: X = (Y - b) / m
x_values <- (y_values - b) / m

print(x_values)
```


## Glenner: GL2
### create Plot df
```{r}
# read stacked raster
GL2_stacked <- stack("rasters_stacked/GL2_stacked.grd")

# extract velocity and water depth information for plots 
GL2_extract <- terra::extract(GL2_stacked, data_GL2) |>
  cbind(data_GL2_add) |>
  mutate(depth = depth/100,
         velocity = velocity/100)

# create long table with velocity values from rasters
GL2_v <- GL2_extract[ ,c(1,3,5,7,9,11,13,15,17,19,22)] |>
  pivot_longer(cols = c(1:10),names_to = "discharge_v",
               values_to = "velocity_v")

# create long table with water depth values from rasters
GL2_wd <- GL2_extract[ ,c(2,4,6,8,10,12,14,16,18,20,22,23)] |>
  pivot_longer(cols = c(1:10),names_to = "discharge",
               values_to = "water_depth")

#GL1_wd$discharge <- gsub("GL1_wd_", "", GL1_wd$discharge)
#GL1_wd$discharge <- gsub("_", ".", GL1_wd$discharge)
#GL1_wd$discharge <- as.numeric(GL1_wd$discharge)

#GL1_plot <- cbind(GL1_wd, GL1_v) |>
#  select(discharge, water_depth, velocity)
```


## Landquart: L2
```{r}

```

## Moesa: M1
```{r}

```

## Sitter: S1
```{r}

```

## Sitter: S2
```{r}

```

## Thur: TH4
```{r}

```

## Vorderrhein: VR3
```{r}

```